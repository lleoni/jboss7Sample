CREATE TABLE IF NOT EXISTS  PUBLIC.HOST(
    HOST_ID INTEGER NOT NULL IDENTITY COMMENT 'The primary key for the host',
    NAME VARCHAR2(255) NOT NULL COMMENT 'The short or preferred host name',
    DOMAIN VARCHAR2(255) NOT NULL COMMENT 'The domain that the host is in',
    IP VARCHAR2(15) COMMENT 'The ip address of the host',
    FQN VARCHAR2(255)  COMMENT 'The fully qualified name of the host',
    FIRST_CONNECTED TIMESTAMP NOT NULL COMMENT 'The first time the host was seen.',
    LAST_CONNECTED TIMESTAMP NOT NULL COMMENT 'The last time connected.',
    AGENTS INTEGER NOT NULL DEFAULT 0 COMMENT 'The number of agents connected from this host.',
    CONNECTED TIMESTAMP NULL COMMENT 'The time an agent from this host connected or null if not connected.'
) ;      
--ALTER TABLE PUBLIC.HOST ADD CONSTRAINT IF NOT EXISTS PUBLIC.HOST_PK PRIMARY KEY(HOST_ID);           

CREATE  TABLE IF NOT EXISTS PUBLIC.AGENT(
    AGENT_ID INTEGER NOT NULL IDENTITY COMMENT 'The unqiue agent identifier',
    HOST_ID INTEGER NOT NULL COMMENT 'The id of the host this agent is running om.',
    NAME VARCHAR2(120) NOT NULL COMMENT 'The name of the agent.',
    MIN_LEVEL SMALLINT NOT NULL COMMENT 'The lowest level of metrics for this agent.',
    FIRST_CONNECTED TIMESTAMP NOT NULL COMMENT 'The first time the agent was seen.',
    LAST_CONNECTED TIMESTAMP NOT NULL COMMENT 'The last time the agent connected.',
    CONNECTED TIMESTAMP NULL COMMENT 'The time the agent connected or null if not connected.',
    URI VARCHAR2(120) NULL COMMENT 'The listening URI of the connected agent.'
) ; 
--ALTER TABLE PUBLIC.AGENT ADD CONSTRAINT IF NOT EXISTS PUBLIC.AGENT_PK PRIMARY KEY(AGENT_ID);


-- Make sure to update org.helios.apmrouter.catalog.jdbc.h2.MetricTrigger if you change this table.
CREATE TABLE IF NOT EXISTS  PUBLIC.METRIC(
    METRIC_ID LONG  NOT NULL COMMENT 'The unique id of the metric.',
    AGENT_ID INTEGER NOT NULL COMMENT 'The  agent identifier for this metric',
    TYPE_ID SMALLINT NOT NULL COMMENT 'The metric type of the metric',
    NAMESPACE VARCHAR2(200) COMMENT 'The namespace of the metric',
    NARR ARRAY NOT NULL COMMENT 'The namespace array items of the metric',
    LEVEL SMALLINT NOT NULL COMMENT 'The number of namespaces in the namespace',
    NAME VARCHAR2(60) COMMENT 'The point of the metric name',
    FIRST_SEEN TIMESTAMP NOT NULL COMMENT 'The first time this metric was seen',
    STATE TINYINT DEFAULT 0 NOT NULL COMMENT 'The status of this metric (ACTIVE, STALE, OFFLINE) Decode byte with org.helios.apmrouter.destination.chronicletimeseries.EntryStatus',
    LAST_SEEN TIMESTAMP COMMENT 'The last time this metric was seen'
) ;       
ALTER TABLE PUBLIC.METRIC ADD CONSTRAINT IF NOT EXISTS PUBLIC.METRIC_PK PRIMARY KEY(METRIC_ID);
              
CREATE TABLE IF NOT EXISTS  PUBLIC.METRICVALUE (
    METRIC_ID LONG  NOT NULL COMMENT 'The unique id of the metric.',
    VALUE_ID INTEGER NOT NULL COMMENT 'The circular ID for this value instance',
    VALUE_TS TIMESTAMP NOT NULL COMMENT 'The metric value timestamp',
    VALUE LONG NOT NULL COMMENT 'The metric instance value'
) ;       
ALTER TABLE PUBLIC.METRICVALUE ADD CONSTRAINT IF NOT EXISTS PUBLIC.METRICVALUE_PK PRIMARY KEY(METRIC_ID, VALUE_ID);

CREATE TABLE IF NOT EXISTS  PUBLIC.TRACE_TYPE(
    TYPE_ID SMALLINT NOT NULL COMMENT 'The unique id of the trace type.',
    TYPE_NAME VARCHAR2(30) COMMENT 'The name of the trace type'
) ;            
ALTER TABLE PUBLIC.TRACE_TYPE ADD CONSTRAINT IF NOT EXISTS PUBLIC.TRACE_TYPE_PK PRIMARY KEY(TYPE_ID);        

ALTER TABLE PUBLIC.AGENT ADD CONSTRAINT IF NOT EXISTS PUBLIC.AGENT_HOST_FK FOREIGN KEY(HOST_ID) REFERENCES PUBLIC.HOST(HOST_ID) NOCHECK;     
ALTER TABLE PUBLIC.METRIC ADD CONSTRAINT IF NOT EXISTS PUBLIC.METRIC_TRACE_TYPE_FK FOREIGN KEY(TYPE_ID) REFERENCES PUBLIC.TRACE_TYPE(TYPE_ID) NOCHECK;       
ALTER TABLE PUBLIC.METRIC ADD CONSTRAINT IF NOT EXISTS PUBLIC.METRIC_AGENT_FK FOREIGN KEY(AGENT_ID) REFERENCES PUBLIC.AGENT(AGENT_ID) NOCHECK;


ALTER TABLE PUBLIC.METRICVALUE ADD CONSTRAINT IF NOT EXISTS PUBLIC.METRICVALUE_METRIC_FK FOREIGN KEY(METRIC_ID) REFERENCES PUBLIC.METRIC(METRIC_ID) NOCHECK;




CREATE UNIQUE INDEX IF NOT EXISTS TRACE_TYPE_AK ON TRACE_TYPE(TYPE_NAME);
CREATE UNIQUE INDEX IF NOT EXISTS HOST_AK ON HOST(NAME);
CREATE UNIQUE INDEX IF NOT EXISTS AGENT_AK ON AGENT(HOST_ID, NAME);
CREATE UNIQUE INDEX IF NOT EXISTS METRIC_AK ON METRIC(AGENT_ID, TYPE_ID, NAMESPACE, NAME);
CREATE  INDEX IF NOT EXISTS METRIC_NAMES ON METRIC(AGENT_ID, NAMESPACE, NAME);
CREATE  INDEX IF NOT EXISTS METRIC_NAMESPACE_IND ON METRIC(AGENT_ID, NAMESPACE);

CREATE SEQUENCE IF NOT EXISTS SEQ_HOST START WITH 0 INCREMENT BY 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_AGENT START WITH 0 INCREMENT BY 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_METRIC START WITH 0 INCREMENT BY 1 CACHE 128;

