<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Generated Oct 27, 2012 1:30:47 PM by Hibernate Tools 3.6.0 -->
<hibernate-mapping  >
    <class name="org.helios.jboss7.hibernate.domain.Metric" entity-name="metric" table="METRIC" schema="PUBLIC" catalog="DB"  >
        <id name="metricId" type="java.lang.Long">
            <column name="METRIC_ID" />
            <generator class="identity" />
        </id>
        <many-to-one name="traceType" class="org.helios.jboss7.hibernate.domain.TraceType" entity-name="type" fetch="join" lazy="false">
            <column name="TYPE_ID" not-null="true">
                <comment>The metric type of the metric</comment>
            </column>
        </many-to-one>
        
         
        <many-to-one name="agent" class="org.helios.jboss7.hibernate.domain.Agent" entity-name="agent" fetch="join" lazy="false"   >
            <column name="AGENT_ID" not-null="true" >
                <comment>The agent identifier for this metric</comment>
            </column>
        </many-to-one>
        
        
        <property name="namespace" type="string" not-null="true">
            <column name="NAMESPACE" length="200">
                <comment>The namespace of the metric</comment>
            </column>
        </property>
        
        <property name="narr" type="org.helios.jboss7.hibernate.mapping.StringArrayDataType" not-null="true">
            <column name="NARR" >
                <comment>The namespace items array of the metric</comment>
            </column>
        </property>
        
        <property name="level" type="int" update="false">
            <column name="LEVEL" not-null="true">
                <comment>The number of namespaces in the namespace</comment>
            </column>
        </property>
        <property name="name" type="string">
            <column name="NAME" length="60">
                <comment>The point of the metric name</comment>
            </column>
        </property>
        <property name="firstSeen" type="timestamp">
            <column name="FIRST_SEEN" length="23" not-null="true">
                <comment>The first time this metric was seen</comment>
            </column>
        </property>
        <property name="state" type="byte" update="false">
            <column name="STATE" not-null="true">
                <comment>The state of the metric</comment>
            </column>
        </property>
        
        <property name="lastSeen" type="timestamp">
            <column name="LAST_SEEN" length="23">
                <comment>The last time this metric was seen</comment>
            </column>
        </property>
        
        <set name="metricValues" table="METRICVALUE" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="METRIC_ID" not-null="true">
                    <comment>The unique id of the metric.</comment>
                </column>
            </key>
            <one-to-many class="org.helios.jboss7.hibernate.domain.MetricValue" entity-name="metricValue" />
        </set>
        
        
    </class>
    <query name="metricById">from metric m where m.metricId = :metricId
    	<query-param name="metricId" type="java.lang.Long"/>
    </query>    
    
    <query name="allMetricsForAgent">from metric m where m.agent.agentId = :agentId
    	<query-param name="agentId" type="java.lang.Integer"/>
    </query>    
    <query name="findLevelMetricsForAgent">from metric m where m.level = :level and m.agent.agentId = :agentId
    	<query-param name="level" type="java.lang.Integer"/>
    	<query-param name="agentId" type="java.lang.Integer"/>    	
    </query>
    <!-- and m.narr[:level] is not null -->
    <sql-query name="findLevelFoldersForAgent">select distinct narr[:level], m.level-a.min_level  from metric m, agent a  where a.agent_id = m.agent_id and a.agent_id = :agentId and namespace like :parent and narr[:level] is not null 
    	<query-param name="level" type="java.lang.Integer"/>
    	<query-param name="agentId" type="java.lang.Integer"/>   
    	<query-param name="parent" type="java.lang.String"/>
    </sql-query>
    <!-- select distinct narr[1], m.level-a.min_level  from metric m, agent a  where a.agent_id = m.agent_id and a.agent_id = 1 and namespace like '/platform=APMRouter%' and narr[1] is not null  -->
    <sql-query name="findLevelMetricsForAgentWithParent">select {m.*} from metric m where m.agent_id = :agentId and m.level = :level and namespace like :parent
    	<query-param name="level" type="java.lang.Integer"/>
    	<query-param name="agentId" type="java.lang.Integer"/>   
    	<query-param name="parent" type="java.lang.String"/>
    	<return alias="m" entity-name="metric" ></return>
    	<!--  select {m.*} from metric m where m.agent_id = :agentId and m.level = :level and m.narr[:level-1] = :parent -->
    </sql-query>
    
</hibernate-mapping>
	