<!DOCTYPE html>
<!-- saved from url=(0045)http://arquillian.org/guides/getting_started/ -->
<html lang="en" class="ready"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <title>Getting Started · Arquillian Guides</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="Learn how to add Arquillian to the test suite of your project and write your first Arquillian test." name="description">
    <link href="http://arquillian.org/blog/atom.xml" rel="alternate" title="Arquillian blog Atom feed" type="application/atom+xml">
    <link href="http://arquillian.org/stylesheets/screen.css?3a95f337475949627fca063d48f7a9bfea2b1c90" rel="stylesheet">
    <script type="text/javascript" async="" src="./Getting Started · Arquillian Guides_files/ga.js"></script><script async="" src="./Getting Started · Arquillian Guides_files/plusone.js" gapi_processed="true"></script><script src="./Getting Started · Arquillian Guides_files/cb=gapi.loaded_1" async=""></script><script src="./Getting Started · Arquillian Guides_files/cb=gapi.loaded_0" async=""></script><script src="./Getting Started · Arquillian Guides_files/jquery.min.js"></script>
    <!--[if lt IE 9]>
      <script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/r29/html5.js"></script>
    <![endif]-->
    <link href="http://arquillian.org/favicon.ico" rel="shortcut icon">
  </head>
  <body class="guide">
    <header class="navbar navbar-fixed-top" id="banner" role="banner">
      <div class="navbar-inner">
        <div class="container">
          <a class="btn btn-navbar" data-target=".nav-collapse" data-toggle="collapse">
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </a>
          <div class="g-plusone-slot">
            <div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background-color: transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 38px; height: 24px; background-position: initial initial; background-repeat: initial initial;"><iframe frameborder="0" hspace="0" marginheight="0" marginwidth="0" scrolling="no" style="position: static; top: 0px; width: 38px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 24px;" tabindex="0" vspace="0" width="100%" id="I0_1380834704797" name="I0_1380834704797" src="./Getting Started · Arquillian Guides_files/fastbutton.htm" data-gapiattached="true" title="+1"></iframe></div>
          </div>
          <a class="brand" href="http://arquillian.org/">
            <span class="logo"></span>
            <span class="name">Arquillian</span>
          </a>
          <nav class="nav-collapse" role="navigation">
            <ul class="nav">
              <li><a href="http://arquillian.org/invasion/">Invasion!</a></li>
              <li><a href="http://arquillian.org/features/">Features</a></li>
              <li class="active"><a href="http://arquillian.org/guides/">Guides</a></li>
              <li><a href="http://arquillian.org/blog/">Blog</a></li>
              <li><a href="http://arquillian.org/community/">Community</a></li>
              <li><a href="http://arquillian.org/code/">Code</a></li>
            </ul>
          </nav>
        </div>
      </div>
    </header>
    <div id="main" role="main" style="min-height: 553px;">
      <div id="content-header">
        <div class="container">
          <div class="headline">
            <h1>
              <a href="http://arquillian.org/guides/">Arquillian Guides</a>
              <small>Designed exclusively to teach you how to use Arquillian to write real tests.</small>
            </h1>
            <div class="directory">
              <a class="guides_menu" href="./Getting Started · Arquillian Guides_files/Getting Started · Arquillian Guides.htm" id="guides_menu">
                Guides Index
                <i class="icon-menu-closed"></i>
              </a>
              <div id="guides" style="display: none">
                <a class="guides_menu" href="./Getting Started · Arquillian Guides_files/Getting Started · Arquillian Guides.htm">
                  Guides Index
                  <i class="icon-menu-open"></i>
                </a>
                <hr class="clear">
                <dl class="beg">
                  <dt>First Steps</dt>
                  <dd><a href="./Getting Started · Arquillian Guides_files/Getting Started · Arquillian Guides.htm">Getting Started</a>
                  <br>
                  <a href="./Getting Started · Arquillian Guides_files/Getting Started · Arquillian Guides.htm"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/en.png" data-original-title="English (en)"></a>
                  <a href="http://arquillian.org/guides/getting_started_de/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/de.png" data-original-title="Deutsch (de)"></a>
                  <a href="http://arquillian.org/guides/getting_started_el_gr/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/el_gr.png" data-original-title="Ελληνικά (el_gr)"></a>
                  <a href="http://arquillian.org/guides/getting_started_es/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/es.png" data-original-title="Español (es)"></a>
                  <a href="http://arquillian.org/guides/getting_started_fr/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/fr.png" data-original-title="Française (fr)"></a>
                  <a href="http://arquillian.org/guides/getting_started_it/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/it.png" data-original-title="Italiano (it)"></a>
                  <a href="http://arquillian.org/guides/getting_started_ja/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/ja.png" data-original-title="日本 (ja)"></a>
                  <a href="http://arquillian.org/guides/getting_started_nl/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/nl.png" data-original-title="Nederlands (nl)"></a>
                  <a href="http://arquillian.org/guides/getting_started_pl/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/pl.png" data-original-title="Polski (pl)"></a>
                  <a href="http://arquillian.org/guides/getting_started_pt/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/pt.png" data-original-title="Português (pt)"></a>
                  <a href="http://arquillian.org/guides/getting_started_sk/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/sk.png" data-original-title="Slovenčina (sk)"></a>
                  <a href="http://arquillian.org/guides/getting_started_sv_se/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/sv_se.png" data-original-title="Svenska (sv_se)"></a>
                  <a href="http://arquillian.org/guides/getting_started_zh_cn/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/zh_cn.png" data-original-title="简体中文 (zh_cn)"></a></dd>
                  <dd><a href="http://arquillian.org/guides/getting_started_rinse_and_repeat/">Getting Started: Rinse and Repeat</a>
                  <br>
                  <a href="http://arquillian.org/guides/getting_started_rinse_and_repeat/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/en.png" data-original-title="English (en)"></a>
                  <a href="http://arquillian.org/guides/getting_started_rinse_and_repeat_de/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/de.png" data-original-title="Deutsch (de)"></a>
                  <a href="http://arquillian.org/guides/getting_started_rinse_and_repeat_es/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/es.png" data-original-title="Español (es)"></a>
                  <a href="http://arquillian.org/guides/getting_started_rinse_and_repeat_fr/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/fr.png" data-original-title="Française (fr)"></a>
                  <a href="http://arquillian.org/guides/getting_started_rinse_and_repeat_it/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/it.png" data-original-title="Italiano (it)"></a>
                  <a href="http://arquillian.org/guides/getting_started_rinse_and_repeat_ja/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/ja.png" data-original-title="日本 (ja)"></a>
                  <a href="http://arquillian.org/guides/getting_started_rinse_and_repeat_pl/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/pl.png" data-original-title="Polski (pl)"></a>
                  <a href="http://arquillian.org/guides/getting_started_rinse_and_repeat_pt/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/pt.png" data-original-title="Português (pt)"></a>
                  <a href="http://arquillian.org/guides/getting_started_rinse_and_repeat_zh_cn/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/zh_cn.png" data-original-title="简体中文 (zh_cn)"></a></dd>
                  <dd><a href="http://arquillian.org/guides/get_started_faster_with_forge/">Get Started Faster with Forge</a>
                  <br>
                  <a href="http://arquillian.org/guides/get_started_faster_with_forge/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/en.png" data-original-title="English (en)"></a>
                  <a href="http://arquillian.org/guides/get_started_faster_with_forge_de/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/de.png" data-original-title="Deutsch (de)"></a>
                  <a href="http://arquillian.org/guides/get_started_faster_with_forge_el_gr/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/el_gr.png" data-original-title="Ελληνικά (el_gr)"></a>
                  <a href="http://arquillian.org/guides/get_started_faster_with_forge_it/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/it.png" data-original-title="Italiano (it)"></a>
                  <a href="http://arquillian.org/guides/get_started_faster_with_forge_ja/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/ja.png" data-original-title="日本 (ja)"></a>
                  <a href="http://arquillian.org/guides/get_started_faster_with_forge_pl/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/pl.png" data-original-title="Polski (pl)"></a>
                  <a href="http://arquillian.org/guides/get_started_faster_with_forge_pt/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/pt.png" data-original-title="Português (pt)"></a>
                  <a href="http://arquillian.org/guides/get_started_faster_with_forge_zh_cn/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/zh_cn.png" data-original-title="简体中文 (zh_cn)"></a></dd>
                  <dd><a href="http://arquillian.org/guides/shrinkwrap_introduction/">Creating Deployable Archives with ShrinkWrap</a>
                  <br>
                  <a href="http://arquillian.org/guides/shrinkwrap_introduction/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/en.png" data-original-title="English (en)"></a>
                  <a href="http://arquillian.org/guides/shrinkwrap_introduction_de/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/de.png" data-original-title="Deutsch (de)"></a>
                  <a href="http://arquillian.org/guides/shrinkwrap_introduction_fr/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/fr.png" data-original-title="Française (fr)"></a>
                  <a href="http://arquillian.org/guides/shrinkwrap_introduction_it/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/it.png" data-original-title="Italiano (it)"></a>
                  <a href="http://arquillian.org/guides/shrinkwrap_introduction_ja/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/ja.png" data-original-title="日本 (ja)"></a>
                  <a href="http://arquillian.org/guides/shrinkwrap_introduction_pl/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/pl.png" data-original-title="Polski (pl)"></a>
                  <a href="http://arquillian.org/guides/shrinkwrap_introduction_zh_cn/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/zh_cn.png" data-original-title="简体中文 (zh_cn)"></a></dd>
                </dl>
                <dl class="int">
                  <dt>More Coverage</dt>
                  <dd><a href="http://arquillian.org/guides/testing_java_persistence/">Testing Java Persistence</a>
                  <br>
                  <a href="http://arquillian.org/guides/testing_java_persistence/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/en.png" data-original-title="English (en)"></a>
                  <a href="http://arquillian.org/guides/testing_java_persistence_es/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/es.png" data-original-title="Español (es)"></a>
                  <a href="http://arquillian.org/guides/testing_java_persistence_fr/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/fr.png" data-original-title="Française (fr)"></a>
                  <a href="http://arquillian.org/guides/testing_java_persistence_ja/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/ja.png" data-original-title="日本 (ja)"></a>
                  <a href="http://arquillian.org/guides/testing_java_persistence_zh_cn/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/zh_cn.png" data-original-title="简体中文 (zh_cn)"></a></dd>
                  <dd><a href="http://arquillian.org/guides/functional_testing_using_graphene/">Functional Testing using Drone and Graphene</a></dd>
                  <dd><a href="http://arquillian.org/guides/testing_in_the_cloud/">Testing in the Cloud</a></dd>
                </dl>
                <dl class="adv">
                  <dt>Enhance</dt>
                  <dd><a href="http://arquillian.org/guides/developing_a_container_adapter/">Developing a Container Adapter</a></dd>
                </dl>
                <dl class="ref">
                  <dt>Reference</dt>
                  <dd><a href="https://docs.jboss.org/author/display/ARQ/Reference+Guide">Reference Guide</a></dd>
                  <dd><a href="http://docs.jboss.org/arquillian/aggregate/latest">API &amp; SPI Docs</a></dd>
                  <dd><a href="http://community.jboss.org/wiki/ArquillianMigrationGuides">Migration Guides</a></dd>
                  <dd><a href="http://community.jboss.org/en/arquillian/faq">FAQs</a></dd>
                </dl>
              </div>
            </div>
            <script>$(function() { activateGuideMenuControl() })</script>
          </div>
        </div>
      </div>
      <div class="container" id="guide">
        <div id="content">
            <div class="header">
            <div class="titlebar">
            <h2>Getting Started</h2>
            <div class="btn-group">
              <a class="btn" href="https://github.com/arquillian/arquillian.github.com/edit/develop/guides/getting_started.textile">Edit this file</a>
            </div>
          </div>
            <div class="authors"><strong>Author:</strong>
          <a href="https://community.jboss.org/people/dan.j.allen">Dan Allen</a>  <strong style="padding-left: 10px;">Translations:</strong>
          <a href="http://arquillian.org/guides/getting_started_de/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/de.png" data-original-title="Deutsch (de)"></a>
          <a href="http://arquillian.org/guides/getting_started_el_gr/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/el_gr.png" data-original-title="Ελληνικά (el_gr)"></a>
          <a href="http://arquillian.org/guides/getting_started_es/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/es.png" data-original-title="Español (es)"></a>
          <a href="http://arquillian.org/guides/getting_started_fr/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/fr.png" data-original-title="Française (fr)"></a>
          <a href="http://arquillian.org/guides/getting_started_it/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/it.png" data-original-title="Italiano (it)"></a>
          <a href="http://arquillian.org/guides/getting_started_ja/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/ja.png" data-original-title="日本 (ja)"></a>
          <a href="http://arquillian.org/guides/getting_started_nl/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/nl.png" data-original-title="Nederlands (nl)"></a>
          <a href="http://arquillian.org/guides/getting_started_pl/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/pl.png" data-original-title="Polski (pl)"></a>
          <a href="http://arquillian.org/guides/getting_started_pt/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/pt.png" data-original-title="Português (pt)"></a>
          <a href="http://arquillian.org/guides/getting_started_sk/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/sk.png" data-original-title="Slovenčina (sk)"></a>
          <a href="http://arquillian.org/guides/getting_started_sv_se/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/sv_se.png" data-original-title="Svenska (sv_se)"></a>
          <a href="http://arquillian.org/guides/getting_started_zh_cn/"><img class="flag" rel="tooltip" src="./Getting Started · Arquillian Guides_files/zh_cn.png" data-original-title="简体中文 (zh_cn)"></a>
          <br>
          <strong>Level:</strong>
          First Steps  <strong style="padding-left: 10px;">Tags:</strong>
          cdi, weld, maven, forge, eclipse  <strong style="padding-left: 10px;">Last Update:</strong>Dec 01, 2012</div>
            <p>This guide introduces you to Arquillian. After reading this guide, you’ll be able to:</p>
            <ul>
          	<li>Add the Arquillian infrastructure to a Maven-based Java project</li>
          	<li>Write an Arquillian test that asserts the behavior of a <acronym title="Contexts and Dependency Injection">CDI</acronym> bean</li>
          	<li>Execute the Arquillian test in multiple compatible containers in both Maven and Eclipse</li>
          </ul>
            <p>You’ll learn all of these skills by incorporating Arquillian into the test suite of a Java EE application built with Maven. We’ve designed this guide to be a <em>fast read</em> to get you started quickly!</p>
            </div>
            <h3 id="assumptions">Assumptions</h3>
          <p>The simplest way to get started with Arquillian is to incorporate it into the test suite of a project build that offers dependency management. Today, the most widely used build tool in this category is <a href="http://maven.apache.org/">Apache Maven</a>. This guide will navigate you to your first <strong class="greenbar">green bar</strong> using a new Maven project.</p>
          <p class="info"><span>Arquillian does not depend on Maven, or any specific build tool for that matter. It works just as well—if not better—when used in a project with an Ant or Gradle build. Ideally, the build tool should offer dependency management as it simplifies the task of including the Arquillian libraries since they are distributed in the <a href="http://search.maven.org/">Maven Central repository</a>.</span></p>
          <p>This guide assumes you have Maven available, either in your command shell or your <acronym title="Integrated Development Environment">IDE</acronym>. If you don’t, please <a href="http://maven.apache.org/download.html">download and install Maven now</a>. You’ll also need <a href="http://www.oracle.com/technetwork/java/javase/downloads"><acronym title="Java Development Kit">JDK</acronym> 1.5</a> or higher installed on your machine, though JDK 1.6 is preferred.</p>
          <h3 id="create_a_new_project">Create a New Project</h3>
          <p>There are two ways we recommend you create a new Maven project:</p>
          <ol>
          	<li><a href="http://arquillian.org/guides/getting_started/#generate_project_from_archetype">Generate a project from a Maven archetype</a></li>
          	<li><a href="http://arquillian.org/guides/getting_started/#create_project_using_forge">Create and customize a project using JBoss Forge</a></li>
          </ol>
          <p>By far, <a href="http://jboss.org/forge">JBoss Forge</a> is the simpler approach, but this guide will offer both options in the event you aren’t ready to adopt JBoss Forge. Select from one of the two options above to jump to the instructions.</p>
          <p class="info"><span>If you already have a Maven project, you can use this section as review to ensure you have the proper dependencies before moving on.</span></p>
          <h4 id="generate_project_from_archetype">Generate a Project from a Maven Archetype</h4>
          <p>First, create a Maven-based Java project using the following command:</p>
          <pre class="command"><code class="command">$ mvn archetype:generate -DarchetypeGroupId=net.avh4.mvn.archetype \
-DarchetypeArtifactId=java-1.6-archetype</code></pre>
          <p><em>Copy the text after the <code>$</code> and paste it into your command shell</em>. Respond to the prompts by entering the value shown after each double colon in the pane below. Hit the Enter key after each entry (as indicated by <code>&lt;ENTER&gt;</code>).</p>
          <pre class="output"><code class="output">Define value for property 'groupId': : org.arquillian.example &lt;ENTER&gt;
Define value for property 'artifactId': : arquillian-tutorial &lt;ENTER&gt;
Define value for property 'version': : &lt;ENTER&gt;
Define value for property 'package': : &lt;ENTER&gt;
Confirm properties configuration:
groupId: org.arquillian.example
artifactId: arquillian-tutorial
version: 1.0-SNAPSHOT
package: org.arquillian.example
Y: : &lt;ENTER&gt;</code></pre>
          <p>This command generated a Maven-based Java project inside the current directory in a new folder named <code>arquillian-tutorial</code>. Switch to that directory. The file structure of the project is shown below.</p>
          <ul class="filetree">
          	<li>src/
          	<ul>
          		<li>main/
          		<ul>
          			<li>java/ – Place all application Java source files here (under Java package)</li>
          			<li>resources/ – Place all application configuration files here</li>
          		</ul></li>
          		<li>test/
          		<ul>
          			<li>java/ – Place all test Java source files heres (under Java package)</li>
          			<li>resources/ – Place all test configuration files here (e.g., arquillian.xml)</li>
          		</ul></li>
          	</ul></li>
          	<li>pom.xml – The Maven build file. Tells Maven how your project should be built.</li>
          </ul>
          <p>The project generator also created a Java package named <code>org.arquillian.example</code> underneath the two <code>java</code> folders. You should put your Java source files in this package rather than at the root of the <code>java</code> folder.</p>
          <p>Go ahead and open up the <code>pom.xml</code> in your editor. You should see an XML file containing basic project information, a build section and a dependencies section.</p>
          <p class="info"><span>You’ll notice the project is configured to use Java 1.6 and JUnit 4.8, the minimum recommended versions of Java and JUnit for using Arquillian, respectively.</span></p>
          <p class="warning"><span>Arquillian also supports TestNG 5. However, we’ll be using JUnit throughout this guide.</span></p>
          <p><strong>You can remove all the <code>&lt;dependency&gt;</code> elements below the JUnit dependency as they aren’t required.</strong> After making this change, the file should match the contents below (slightly formatted):</p>
          <div class="filename">pom.xml</div>
          <pre class="prettify"><code class="prettify"><span class="pun"><span class="pun">&lt;?</span></span><span class="pln"><span class="pln">xml version</span></span><span class="pun"><span class="pun">=</span></span><span class="str"><span class="str">"1.0"</span></span><span class="pln"><span class="pln"> encoding</span></span><span class="pun"><span class="pun">=</span></span><span class="str"><span class="str">"UTF-8"</span></span><span class="pun"><span class="pun">?&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;project</span></span><span class="pln"><span class="pln"> </span></span><span class="atn"><span class="atn">xmlns</span></span><span class="pun"><span class="pun">=</span></span><span class="atv"><span class="atv">"http://maven.apache.org/POM/4.0.0"</span></span><span class="pln"><span class="pln">
    </span></span><span class="atn"><span class="atn">xmlns:xsi</span></span><span class="pun"><span class="pun">=</span></span><span class="atv"><span class="atv">"http://www.w3.org/2001/XMLSchema-instance"</span></span><span class="pln"><span class="pln">
    </span></span><span class="atn"><span class="atn">xsi:schemaLocation</span></span><span class="pun"><span class="pun">=</span></span><span class="atv"><span class="atv">"
        http://maven.apache.org/POM/4.0.0
        http://maven.apache.org/xsd/maven-4.0.0.xsd"</span></span><span class="tag"><span class="tag">&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;modelVersion&gt;</span></span><span class="pln"><span class="pln">4.0.0</span></span><span class="tag"><span class="tag">&lt;/modelVersion&gt;</span></span></code><span class="pln">

</span><code class="prettify"><span class="pln"><span class="pln">    </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.arquillian.example</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">arquillian-tutorial</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">1.0-SNAPSHOT</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;packaging&gt;</span></span><span class="pln"><span class="pln">jar</span></span><span class="tag"><span class="tag">&lt;/packaging&gt;</span></span></code><span class="pln">

</span><code class="prettify"><span class="pln"><span class="pln">    </span></span><span class="tag"><span class="tag">&lt;name&gt;</span></span><span class="pln"><span class="pln">arquillian-tutorial</span></span><span class="tag"><span class="tag">&lt;/name&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;url&gt;</span></span><span class="pln"><span class="pln">http://arquillian.org</span></span><span class="tag"><span class="tag">&lt;/url&gt;</span></span></code><span class="pln">

</span><code class="prettify"><span class="pln"><span class="pln">    </span></span><span class="tag"><span class="tag">&lt;properties&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;project.build.sourceEncoding&gt;</span></span><span class="pln"><span class="pln">UTF-8</span></span><span class="tag"><span class="tag">&lt;/project.build.sourceEncoding&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;/properties&gt;</span></span></code><span class="pln">

</span><code class="prettify"><span class="pln"><span class="pln">    </span></span><span class="tag"><span class="tag">&lt;build&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;plugins&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;plugin&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">maven-compiler-plugin</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">2.3.2</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;configuration&gt;</span></span><span class="pln"><span class="pln">
                    </span></span><span class="tag"><span class="tag">&lt;source&gt;</span></span><span class="pln"><span class="pln">1.6</span></span><span class="tag"><span class="tag">&lt;/source&gt;</span></span><span class="pln"><span class="pln">
                    </span></span><span class="tag"><span class="tag">&lt;target&gt;</span></span><span class="pln"><span class="pln">1.6</span></span><span class="tag"><span class="tag">&lt;/target&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;/configuration&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;/plugin&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;/plugins&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;/build&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;dependencies&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">junit</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">junit</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">4.8.1</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">test</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;/dependencies&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;/project&gt;</span></span></code></pre>
          <p>We’re going to be writing Java EE 6 components. Therefore, we need to add the Java EE 6 API to the classpath so we can compile these components.</p>
          <p>Open up the <code>pom.xml</code> file once again and add the following XML fragment directly inside the <code>&lt;dependencies&gt;</code> element. Here’s how the <code>&lt;dependencies&gt;</code> element should look once you’re done:</p>
          <div class="filename">pom.xml</div>
          <pre class="prettify"><code class="prettify"><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;dependencies&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.jboss.spec</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">jboss-javaee-6.0</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">1.0.0.Final</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;type&gt;</span></span><span class="pln"><span class="pln">pom</span></span><span class="tag"><span class="tag">&lt;/type&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">provided</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">junit</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">junit</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">4.8.1</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">test</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;/dependencies&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span></code></pre>
          <p class="important"><span>The <code>org.jboss.spec:jboss-javaee-6.0</code> artifact is comprised of only standard Java EE 6 APIs. We <strong>strongly</strong> recommend that you <strong>do not use</strong> the Java EE API artifact with coordinates <code>javax:javaee-api</code>. The latter artifact contains classes with stripped method bodies, which will cause your application to throw obscure Absent Code errors if present on the classpath at runtime (even when running tests). <a href="https://community.jboss.org/wiki/WhatsTheCauseOfThisExceptionJavalangClassFormatErrorAbsentCode">Read this FAQ</a> for more details.</span></p>
          <p>The foundation of your project is now ready! Skip to the next section, <a href="http://arquillian.org/guides/getting_started/#open_the_project_in_eclipse">Open the Project in Eclipse</a>, so we can start writing some code!</p>
          <h4 id="create_project_using_forge">Create a Project Using Forge</h4>
          <p><a href="http://jboss.org/forge">JBoss Forge</a> is a command shell for rapid-application development in a standards-based environment. Another way to think of it is that it’s like Maven Archetypes on steroids.</p>
          <p>Installing Forge is a relatively short process, and this guide will take you through the fundamentals. Follow these simple steps to get Forge installed:</p>
          <ol>
          	<li><a href="https://repository.jboss.org/nexus/service/local/artifact/maven/redirect?r=releases&g=org.jboss.forge&a=forge-distribution&v=1.0.0.Final&e=zip">Download Forge</a></li>
          	<li>Unzip the distribution into a folder on your harddrive, which we’ll call <code>$FORGE_HOME</code><br>
            We’ll assume you extracted the distribution to a folder named <code>forge</code> in your home directory</li>
          	<li>Add <code>$FORGE_HOME/bin</code> to your path (Windows, Linux or Mac OSX)</li>
          </ol>
          <p>On Unix based operating systems, adding Forge to your path typically means editing your $HOME/.bashrc or $HOME/.profile; you will need to set the following environment variables:</p>
          <pre class="command"><code class="command">$ export FORGE_HOME=$HOME/forge/
$ export PATH=$PATH:$FORGE_HOME/bin</code></pre>
          <p class="info"><span>On Windows, you’ll need to right-click on open the “Control Panel”, then click “System Properties”, open the “Advanced” tab, then click “Environment Variables” and add these two entries visually. We recommended setting User variables for Forge, unless you have placed the unzipped distribution in a folder where all users can access it.</span></p>
          <p>Now that Forge is installed (i.e., extracted), open a command prompt (a shell) and run the <code>forge</code> command:</p>
          <pre class="command"><code class="command">$ forge
   _____                    
  |  ___|__  _ __ __ _  ___ 
  | |_ / _ \| `__/ _` |/ _ \  \\
  |  _| (_) | | | (_| |  __/  //
  |_|  \___/|_|  \__, |\___| 
                  |___/      </code>
 
<code class="command">[no project] ~ $</code></pre>
          <p>That’s it! You’ve got Forge up and running. Now it’s time to create the project.</p>
          <p>Inside the Forge shell, execute the following command to create a blank project, much like we created a project using the Maven Archetype above:</p>
          <pre class="command"><code class="command">$ new-project --named arquillian-tutorial --topLevelPackage org.arquillian.example</code></pre>
          <p>This command generates a Maven-based Java project inside a new folder named <code>arquillian-tutorial</code> under the current directory.</p>
          <p>The file structure of the project Forge generates is shown below:</p>
          <ul class="filetree">
          	<li>src/
          	<ul>
          		<li>main/
          		<ul>
          			<li>java/ – Place all application Java source files here (under Java package)</li>
          			<li>resources/ – Place all application configuration files here
          			<ul>
          				<li>META-INF/
          				<ul>
          					<li>forge.xml – An empty Forge settings file</li>
          				</ul></li>
          			</ul></li>
          		</ul></li>
          		<li>test/
          		<ul>
          			<li>java/ – Place all test Java source files heres (under Java package)</li>
          			<li>resources/ – Place all test configuration files here (e.g., arquillian.xml)</li>
          		</ul></li>
          	</ul></li>
          	<li>pom.xml – The Maven build file. Tells Maven how your project should be built.</li>
          </ul>
          <p>Forge also makes the project folder your current directory within the Forge shell.</p>
          <pre class="command"><code class="command">[arquillian-tutorial] arquillian-tutorial $ </code></pre>
          <p>By default, Forge sets up the project to use Java 1.6, the minimum recommended version of Java for using Arquillian, a nice convenience.</p>
          <p>What we need to add now is the Java EE APIs. That’s done using the <code>project add-dependency</code> command below:</p>
          <pre class="command"><code class="command">$ project add-dependency org.jboss.spec:jboss-javaee-6.0:1.0.0.Final:provided:pom</code></pre>
          <p>You’ll also need to add JUnit 4.8, the minimum required version of JUnit to use Arquillian, as a test-scoped dependency:</p>
          <pre class="command"><code class="command">$ project add-dependency junit:junit:4.8.1:test</code></pre>
          <p>Forge adds the JBoss Community repository to the pom.xml file. This repository is not required to use Arquillian. (However, you can keep it if you are using other libraries only available in the JBoss Community repository). If you do decide to remove the repository, you can easily do so using the following Forge command:</p>
          <pre class="command"><code class="command">$ project remove-repository http://repository.jboss.org/nexus/content/groups/public </code></pre>
          <p>The result of the pom.xml that Forge generates is shown below:</p>
          <div class="filename">pom.xml</div>
          <pre class="prettify"><code class="prettify"><span class="pun"><span class="pun">&lt;?</span></span><span class="pln"><span class="pln">xml version</span></span><span class="pun"><span class="pun">=</span></span><span class="str"><span class="str">"1.0"</span></span><span class="pln"><span class="pln"> encoding</span></span><span class="pun"><span class="pun">=</span></span><span class="str"><span class="str">"UTF-8"</span></span><span class="pun"><span class="pun">?&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;project</span></span><span class="pln"><span class="pln"> </span></span><span class="atn"><span class="atn">xmlns</span></span><span class="pun"><span class="pun">=</span></span><span class="atv"><span class="atv">"http://maven.apache.org/POM/4.0.0"</span></span><span class="pln"><span class="pln">
    </span></span><span class="atn"><span class="atn">xsi:schemaLocation</span></span><span class="pun"><span class="pun">=</span></span><span class="atv"><span class="atv">"
        http://maven.apache.org/POM/4.0.0
        http://maven.apache.org/xsd/maven-4.0.0.xsd"</span></span><span class="pln"><span class="pln">
    </span></span><span class="atn"><span class="atn">xmlns:xsi</span></span><span class="pun"><span class="pun">=</span></span><span class="atv"><span class="atv">"http://www.w3.org/2001/XMLSchema-instance"</span></span><span class="tag"><span class="tag">&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;modelVersion&gt;</span></span><span class="pln"><span class="pln">4.0.0</span></span><span class="tag"><span class="tag">&lt;/modelVersion&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.arquillian.example</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">arquillian-tutorial</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">1.0.0-SNAPSHOT</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;dependencies&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.jboss.spec</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">jboss-javaee-6.0</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">1.0.0.Final</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;type&gt;</span></span><span class="pln"><span class="pln">pom</span></span><span class="tag"><span class="tag">&lt;/type&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">provided</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">junit</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">junit</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">4.8.1</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">test</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;/dependencies&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;build&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;finalName&gt;</span></span><span class="pln"><span class="pln">arquillian-tutorial</span></span><span class="tag"><span class="tag">&lt;/finalName&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;plugins&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;plugin&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">maven-compiler-plugin</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">2.3.2</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;configuration&gt;</span></span><span class="pln"><span class="pln">
                    </span></span><span class="tag"><span class="tag">&lt;source&gt;</span></span><span class="pln"><span class="pln">1.6</span></span><span class="tag"><span class="tag">&lt;/source&gt;</span></span><span class="pln"><span class="pln">
                    </span></span><span class="tag"><span class="tag">&lt;target&gt;</span></span><span class="pln"><span class="pln">1.6</span></span><span class="tag"><span class="tag">&lt;/target&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;/configuration&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;/plugin&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;/plugins&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;/build&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;/project&gt;</span></span></code></pre>
          <p>The foundation of your project is now ready! Let’s now open the project in Eclipse so we can start writing some code!</p>
          <h3 id="open_the_project_in_eclipse">Open the Project in Eclipse</h3>
          <p>When developing a Java project, you’ll likely use an IDE such as Eclipse. That’s why Arquillian has been designed to be IDE friendly. You can run Arquillian tests from the IDE without any special configuration. Let’s start taking advantage of the IDE immediately.</p>
          <p>Begin by launching Eclipse. Since this is a Maven project, you need the <a href="http://eclipse.org/m2e">Maven Integration for Eclipse</a> (m2e) plugin installed in order to open the project.</p>
          <h4>Installing the m2e plugin</h4>
          <p>If you don’t already have the m2e plugin installed, the simplest way to get it is to install <a href="http://jboss.org/tools">JBoss Tools</a>. Follow these steps to install it from the Eclipse Marketplace (sort of like the app store for Eclipse).</p>
          <ol>
          	<li>Select <code>Help &gt; Eclipse Marketplace...</code> from the main menu</li>
          	<li>Type “jboss tools” (without quotes) in the Find input field, then press Enter</li>
          	<li>Click the Install button next to JBoss Tools (Indigo)</li>
          	<li>Complete the install wizard, then restart Eclipse if prompted</li>
          </ol>
          <p>JBoss Tools provides a nice environment for developing Java EE applications, including excellent CDI support. Don’t worry, it’s not a heavyweight plugin.</p>
          <p>However, if you just want the Maven integration without the extras that JBoss Tools brings, you can follow these steps instead:</p>
          <ol>
          	<li>Select <code>Help &gt; Eclipse Marketplace...</code> from the main menu</li>
          	<li>Type “maven” (without quotes) in the Find input field, then press Enter</li>
          	<li>Click the Install button next to Maven Integration for Eclipse</li>
          	<li>Complete the install wizard, then restart Eclipse if prompted</li>
          	<li>Repeat the steps to install the Maven Integration for Eclipse WTP</li>
          </ol>
          <h4>Using m2e to import the project</h4>
          <p>Once you have the Maven Integration plugin installed, follow these steps to open the project:</p>
          <ol>
          	<li>Select <code>File &gt; Import...</code> from the main menu</li>
          	<li>Type “existing maven” (without quotes) in the import source field</li>
          	<li>Select the option Existing Maven Projects, then click the Next button</li>
          	<li>Click the Browse… button</li>
          	<li>Navigate to the project folder in the file browser, select it, then click the OK button</li>
          	<li>Click the Finish button to open the project</li>
          </ol>
          <p>Eclipse will recognize the Maven project and open it in the Project Navigator view. If you expand the project, it should look similar to this image:</p>
          <p><img src="./Getting Started · Arquillian Guides_files/arquillian_tutorial_eclipse_project.png" alt=""></p>
          <p>Now we can really get down to business!</p>
          <h3 id="create_a_component">Create a Component</h3>
          <p>In order to write an Arquillian test, we need to have a component for it to test. Let’s begin by creating a basic component so that you can learn how to execute an Arquillian test without other distractions. We’ll gradually move to more complex scenarios.</p>
          <p>In your IDE, create a new Java class named <code>Greeter</code> in the <code>org.arquillian.example</code> package. Replace the contents of the file with this greeter logic:</p>
          <div class="filename">src/main/java/org/arquillian/example/Greeter.java</div>
          <pre class="prettify"><code class="prettify"><span class="kwd"><span class="kwd">package</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">arquillian</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">example</span></span><span class="pun"><span class="pun">;</span></span></code><span class="pln">

</span><code class="prettify"><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> java</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">io</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">PrintStream</span></span><span class="pun"><span class="pun">;</span></span></code><span class="pln">

</span><code class="prettify"><span class="com"><span class="com">/**
 * A component for creating personal greetings.
 */</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">class</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">Greeter</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
    </span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">void</span></span><span class="pln"><span class="pln"> greet</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">PrintStream</span></span><span class="pln"><span class="pln"> to</span></span><span class="pun"><span class="pun">,</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">String</span></span><span class="pln"><span class="pln"> name</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
        to</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">println</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">createGreeting</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">name</span></span><span class="pun"><span class="pun">));</span></span><span class="pln"><span class="pln">
    </span></span><span class="pun"><span class="pun">}</span></span></code><span class="pln">

</span><code class="prettify"><span class="pln"><span class="pln">    </span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">String</span></span><span class="pln"><span class="pln"> createGreeting</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">String</span></span><span class="pln"><span class="pln"> name</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
        </span></span><span class="kwd"><span class="kwd">return</span></span><span class="pln"><span class="pln"> </span></span><span class="str"><span class="str">"Hello, "</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">+</span></span><span class="pln"><span class="pln"> name </span></span><span class="pun"><span class="pun">+</span></span><span class="pln"><span class="pln"> </span></span><span class="str"><span class="str">"!"</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
    </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">
</span></span><span class="pun"><span class="pun">}</span></span></code></pre>
          <p>We want to verify that this class behaves properly when invoked as a <acronym title="Contexts and Dependency Injection">CDI</acronym> bean. Of course, we could simply write a unit test. But let’s pretend that the bean uses enterprise services such as dependency injection and messaging and must be used inside a container. (Besides, that way we give it room to grow ~;))</p>
          <p>To use the class as a CDI bean, we’ll be injecting it into the test using the <code>@Inject</code> annotation. That calls for an Arquillian test! That means it’s time to add the Arquillian API to the project!</p>
          <h3 id="add_the_arquillian_apis">Add the Arquillian APIs</h3>
          <p>Once again open up the <code>pom.xml</code> file at the root of the project in your editor. We need to instruct Maven which versions of the artifacts to use. Insert the following XML fragment directly above the <code>&lt;build&gt;</code> element to import the <acronym title="Bill of Materials">BOM</acronym>, or version matrix, for Arquillian’s transitive dependencies.</p>
          <div class="filename">pom.xml</div>
          <pre class="prettify"><code class="prettify"><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;dependencyManagement&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;dependencies&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.jboss.arquillian</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">arquillian-bom</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">1.1.1.Final</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">import</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;type&gt;</span></span><span class="pln"><span class="pln">pom</span></span><span class="tag"><span class="tag">&lt;/type&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;/dependencies&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;/dependencyManagement&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span></code></pre>
          <p>Next, append the following XML fragment directly under the last <code>&lt;dependency&gt;</code> element to add the Arquillian JUnit integration:</p>
          <div class="filename">pom.xml</div>
          <pre class="prettify"><code class="prettify"><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.jboss.arquillian.junit</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">arquillian-junit-container</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">test</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span></code></pre>
          <p>The Arquillian JUnit integration artifact also adds the Arquillian Core and ShrinkWrap APIs to the test classpath. You need all of these libraries to write and compile a JUnit Arquillian test.</p>
          <p class="info"><span>To use TestNG instead of JUnit, substitute the Arquillian JUnit integration with the Arquillian TestNG integration.</span></p>
          <p>(Optional) We recommend upgrading the Maven Surefire Plugin from the default version, for reasons described in <a href="https://community.jboss.org/wiki/WhatVersionOfSurefireShouldIUseToRunMyArquillianTestsInAMavenBuild">this FAQ</a>. You can set the version of the Surefire Plugin by appending this <code>&lt;plugin&gt;</code> element inside the <code>&lt;plugins&gt;</code> element, just below the Maven Compiler Plugin:</p>
          <div class="filename">pom.xml</div>
          <pre class="prettify"><code class="prettify"><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;plugin&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">maven-surefire-plugin</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">2.12</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;/plugin&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span></code></pre>
          <p>If you’re having trouble with the pom.xml up to this point, you can download the file <a href="https://raw.github.com/arquillian/arquillian-examples/master/arquillian-tutorial/pom-no-container-profiles.xml">pom-no-container-profiles.xml</a> from the <a href="https://github.com/arquillian/arquillian-examples/tree/master/arquillian-tutorial">example project</a> and rename it to pom.xml.</p>
          <p><strong>You’re all set to write your first Arquillian test!</strong></p>
          <h3 id="write_an_arquillian_test">Write an Arquillian Test</h3>
          <p>An Arquillian test looks just like a unit test, just with some extra flair. Let’s return to the IDE to create one.</p>
          <p class="warning"><span>If you get the message “Project configuration is out of date with pom.xml” then right click and select Project &gt; Maven &gt; Update Project Configuration to resync the project.</span></p>
          <p>Begin by creating a new JUnit test case in src/test/java named <code>GreeterTest</code> and assign it the package name <code>org.arquillian.example</code>. You won’t need the typical JUnit setup and tearDown methods since Arquillian will handle the heavy lifting. Here’s what we have so far:</p>
          <div class="filename">src/test/java/org/arquillian/example/GreeterTest.java</div>
          <pre class="prettify"><code class="prettify"><span class="kwd"><span class="kwd">package</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">arquillian</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">example</span></span><span class="pun"><span class="pun">;</span></span></code><span class="pln">

</span><code class="prettify"><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">junit</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">Assert</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">junit</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">Test</span></span><span class="pun"><span class="pun">;</span></span></code><span class="pln">

</span><code class="prettify"><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">class</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">GreeterTest</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
    </span></span><span class="ann"><span class="ann">@Test</span></span><span class="pln"><span class="pln">
    </span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">void</span></span><span class="pln"><span class="pln"> should_create_greeting</span></span><span class="pun"><span class="pun">()</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
        </span></span><span class="typ"><span class="typ">Assert</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">fail</span></span><span class="pun"><span class="pun">(</span></span><span class="str"><span class="str">"Not yet implemented"</span></span><span class="pun"><span class="pun">);</span></span><span class="pln"><span class="pln">
    </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">
</span></span><span class="pun"><span class="pun">}</span></span></code></pre>
          <p>Now, about that flair. An Arquillian test case must have three things:</p>
          <ol>
          	<li>A <code>@RunWith(Arquillian.class)</code> annotation on the class</li>
          	<li>A public static method annotated with <code>@Deployment</code> that returns a ShrinkWrap archive</li>
          	<li>At least one method annotated with <code>@Test</code></li>
          </ol>
          <p>The <code>@RunWith</code> annotation tells JUnit to use Arquillian as the test controller. Arquillian then looks for a public static method annotated with the <code>@Deployment</code> annotation to retrieve the test archive (i.e., micro-deployment). Then some magic happens and each <code>@Test</code> method is run inside the container environment.</p>
          <p class="info">The <code>@Deployment</code> method is only mandatory for tests that run inside the container and no extension is loaded that otherwise generates the test archive. Client-side tests do not require a test archive, and therefore, do not require a <code>@Deployment</code> method.</p>
          <h4>What’s a test archive?</h4>
          <p>The purpose of the test archive is to isolate the classes and resources which are needed by the test from the remainder of the classpath. Unlike a normal unit test, Arquillian does not simply tap the entire classpath. Instead, you include only what the test needs (which may be the entire classpath, if that’s what you decide). The archive is defined using <a href="http://jboss.org/shrinkwrap">ShrinkWrap</a>, which is a Java API for creating archives (e.g., jar, war, ear) in Java. The micro-deployment strategy lets you focus on precisely the classes you want to test. As a result, the test remains very lean and manageable.</p>
          <p>Once the ShrinkWrap archive is deployed to the server, it becomes a real archive. The container deployer has no knowledge that the archive was package by ShrinkWrap. You can think of ShrinkWrap as a Java-based build tool, with one exception. In the optimal case, it streams the archive to the server instead of writing the archive to disk. But what it creates is an authentic archive.</p>
          <p class="info"><span>ShrinkWrap also supports resolving artifacts (libraries) and create configuration files programmatically, which can then be added to the test archive. For a more thorough introduction to ShrinkWrap, see the <a href="http://arquillian.org/guides/shrinkwrap_introduction">ShrinkWrap introduction</a> guide.</span></p>
          <p>Let’s add that Arquillian flair to the test by replacing its contents with the code below:</p>
          <div class="filename">src/test/java/org/arquillian/example/GreeterTest.java</div>
          <pre class="prettify"><code class="prettify"><span class="kwd"><span class="kwd">package</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">arquillian</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">example</span></span><span class="pun"><span class="pun">;</span></span></code><span class="pln">

</span><code class="prettify"><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">jboss</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">arquillian</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">container</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">test</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">api</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">Deployment</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">jboss</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">arquillian</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">junit</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">Arquillian</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">jboss</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">shrinkwrap</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">api</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">ShrinkWrap</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">jboss</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">shrinkwrap</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">api</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">asset</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">EmptyAsset</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">jboss</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">shrinkwrap</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">api</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">spec</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">JavaArchive</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">junit</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">Assert</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">junit</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">Test</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">junit</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">runner</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">RunWith</span></span><span class="pun"><span class="pun">;</span></span></code><span class="pln">

</span><code class="prettify"><span class="ann"><span class="ann">@RunWith</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">Arquillian</span></span><span class="pun"><span class="pun">.</span></span><span class="kwd"><span class="kwd">class</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">class</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">GreeterTest</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span></code><span class="pln">

</span><code class="prettify"><span class="pln"><span class="pln">    </span></span><span class="ann"><span class="ann">@Deployment</span></span><span class="pln"><span class="pln">
    </span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">static</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">JavaArchive</span></span><span class="pln"><span class="pln"> createDeployment</span></span><span class="pun"><span class="pun">()</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
        </span></span><span class="kwd"><span class="kwd">return</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">ShrinkWrap</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">create</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">JavaArchive</span></span><span class="pun"><span class="pun">.</span></span><span class="kwd"><span class="kwd">class</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln">
            </span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">addClass</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">Greeter</span></span><span class="pun"><span class="pun">.</span></span><span class="kwd"><span class="kwd">class</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln">
            </span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">addAsManifestResource</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">EmptyAsset</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">INSTANCE</span></span><span class="pun"><span class="pun">,</span></span><span class="pln"><span class="pln"> </span></span><span class="str"><span class="str">"beans.xml"</span></span><span class="pun"><span class="pun">);</span></span><span class="pln"><span class="pln">
    </span></span><span class="pun"><span class="pun">}</span></span></code><span class="pln">

</span><code class="prettify"><span class="pln"><span class="pln">    </span></span><span class="ann"><span class="ann">@Test</span></span><span class="pln"><span class="pln">
    </span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">void</span></span><span class="pln"><span class="pln"> should_create_greeting</span></span><span class="pun"><span class="pun">()</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
        </span></span><span class="typ"><span class="typ">Assert</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">fail</span></span><span class="pun"><span class="pun">(</span></span><span class="str"><span class="str">"Not yet implemented"</span></span><span class="pun"><span class="pun">);</span></span><span class="pln"><span class="pln">
    </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">
</span></span><span class="pun"><span class="pun">}</span></span></code></pre>
          <p>Using ShrinkWrap, we’ve defined a Java archive (jar) as the deployment. It includes the <code>Greeter</code> class that the test will invoke and an empty beans.xml in the META-INF directory to activate CDI in this archive.</p>
          <p>If you want to see the contents of the archive that ShrinkWrap creates when the test is run, you can print the archive to stdout (i.e., the console) before returning it.</p>
          <pre class="prettify"><code class="prettify"><span class="ann"><span class="ann">@Deployment</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">static</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">JavaArchive</span></span><span class="pln"><span class="pln"> createDeployment</span></span><span class="pun"><span class="pun">()</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
    </span></span><span class="typ"><span class="typ">JavaArchive</span></span><span class="pln"><span class="pln"> jar </span></span><span class="pun"><span class="pun">=</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">ShrinkWrap</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">create</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">JavaArchive</span></span><span class="pun"><span class="pun">.</span></span><span class="kwd"><span class="kwd">class</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln">
        </span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">addClass</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">Greeter</span></span><span class="pun"><span class="pun">.</span></span><span class="kwd"><span class="kwd">class</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln">
        </span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">addAsManifestResource</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">EmptyAsset</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">INSTANCE</span></span><span class="pun"><span class="pun">,</span></span><span class="pln"><span class="pln"> </span></span><span class="str"><span class="str">"beans.xml"</span></span><span class="pun"><span class="pun">);</span></span><span class="pln"><span class="pln">
    </span></span><span class="typ"><span class="typ">System</span></span><span class="pun"><span class="pun">.</span></span><span class="kwd"><span class="kwd">out</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">println</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">jar</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">toString</span></span><span class="pun"><span class="pun">(</span></span><span class="kwd"><span class="kwd">true</span></span><span class="pun"><span class="pun">));</span></span><span class="pln"><span class="pln">
    </span></span><span class="kwd"><span class="kwd">return</span></span><span class="pln"><span class="pln"> jar</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="pun"><span class="pun">}</span></span></code></pre>
          <p>This produces the following output when the test is run:</p>
          <pre class="output"><code class="output">2ac9cd28-a71a-479a-a785-750b40221766.jar:
/META-INF/
/META-INF/beans.xml
/org/
/org/arquillian/
/org/arquillian/example/
/org/arquillian/example/Greeter.class</code></pre>
          <p>ShrinkWrap assigned the archive a random name since we didn’t specify one explicitly. We’ll cover another way to inspect the archive in the follow-up guide, <a href="http://arquillian.org/guides/getting_started_rinse_and_repeat/#export_the_deployment">Getting Started: Rinse and Repeat</a>.</p>
          <p>Now all we need to do is inject the <code>Greeter</code> instance into a field directly above the test method and replace the unimplemented test method with one that asserts the behavior of the bean. To give you that warm fuzzy feeling, we’ll also print the greeting to the console. Replace the test method with the code below and add an import for <code>javax.inject.Inject</code>.</p>
          <div class="filename">src/test/java/org/arquillian/example/GreeterTest.java</div>
          <pre class="prettify"><code class="prettify"><span class="com"><span class="com">// clip</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> javax</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">inject</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">Inject</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="com"><span class="com">// clip</span></span></code><span class="pln">

</span><code class="prettify"><span class="ann"><span class="ann">@Inject</span></span><span class="pln"><span class="pln">
</span></span><span class="typ"><span class="typ">Greeter</span></span><span class="pln"><span class="pln"> greeter</span></span><span class="pun"><span class="pun">;</span></span></code><span class="pln">

</span><code class="prettify"><span class="ann"><span class="ann">@Test</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">void</span></span><span class="pln"><span class="pln"> should_create_greeting</span></span><span class="pun"><span class="pun">()</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
    </span></span><span class="typ"><span class="typ">Assert</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">assertEquals</span></span><span class="pun"><span class="pun">(</span></span><span class="str"><span class="str">"Hello, Earthling!"</span></span><span class="pun"><span class="pun">,</span></span><span class="pln"><span class="pln">
        greeter</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">createGreeting</span></span><span class="pun"><span class="pun">(</span></span><span class="str"><span class="str">"Earthling"</span></span><span class="pun"><span class="pun">));</span></span><span class="pln"><span class="pln">
    greeter</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">greet</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">System</span></span><span class="pun"><span class="pun">.</span></span><span class="kwd"><span class="kwd">out</span></span><span class="pun"><span class="pun">,</span></span><span class="pln"><span class="pln"> </span></span><span class="str"><span class="str">"Earthling"</span></span><span class="pun"><span class="pun">);</span></span><span class="pln"><span class="pln">
</span></span><span class="pun"><span class="pun">}</span></span></code></pre>
          <p>Here’s how the test should look when you’re done:</p>
          <div class="filename">src/test/java/org/arquillian/example/GreeterTest.java</div>
          <pre class="prettify"><code class="prettify"><span class="kwd"><span class="kwd">package</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">arquillian</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">example</span></span><span class="pun"><span class="pun">;</span></span></code><span class="pln">

</span><code class="prettify"><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> javax</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">inject</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">Inject</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">jboss</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">arquillian</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">container</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">test</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">api</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">Deployment</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">jboss</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">arquillian</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">junit</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">Arquillian</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">jboss</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">shrinkwrap</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">api</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">ShrinkWrap</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">jboss</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">shrinkwrap</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">api</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">asset</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">EmptyAsset</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">jboss</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">shrinkwrap</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">api</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">spec</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">JavaArchive</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">junit</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">Test</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">junit</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">Assert</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">junit</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">runner</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">RunWith</span></span><span class="pun"><span class="pun">;</span></span></code><span class="pln">

</span><code class="prettify"><span class="ann"><span class="ann">@RunWith</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">Arquillian</span></span><span class="pun"><span class="pun">.</span></span><span class="kwd"><span class="kwd">class</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">class</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">GreeterTest</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span></code><span class="pln">

</span><code class="prettify"><span class="pln"><span class="pln">    </span></span><span class="ann"><span class="ann">@Deployment</span></span><span class="pln"><span class="pln">
    </span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">static</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">JavaArchive</span></span><span class="pln"><span class="pln"> createDeployment</span></span><span class="pun"><span class="pun">()</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
        </span></span><span class="kwd"><span class="kwd">return</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">ShrinkWrap</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">create</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">JavaArchive</span></span><span class="pun"><span class="pun">.</span></span><span class="kwd"><span class="kwd">class</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln">
            </span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">addClass</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">Greeter</span></span><span class="pun"><span class="pun">.</span></span><span class="kwd"><span class="kwd">class</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln">
            </span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">addAsManifestResource</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">EmptyAsset</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">INSTANCE</span></span><span class="pun"><span class="pun">,</span></span><span class="pln"><span class="pln"> </span></span><span class="str"><span class="str">"beans.xml"</span></span><span class="pun"><span class="pun">);</span></span><span class="pln"><span class="pln">
    </span></span><span class="pun"><span class="pun">}</span></span></code><span class="pln">

</span><code class="prettify"><span class="pln"><span class="pln">    </span></span><span class="ann"><span class="ann">@Inject</span></span><span class="pln"><span class="pln">
    </span></span><span class="typ"><span class="typ">Greeter</span></span><span class="pln"><span class="pln"> greeter</span></span><span class="pun"><span class="pun">;</span></span></code><span class="pln">

</span><code class="prettify"><span class="pln"><span class="pln">    </span></span><span class="ann"><span class="ann">@Test</span></span><span class="pln"><span class="pln">
    </span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">void</span></span><span class="pln"><span class="pln"> should_create_greeting</span></span><span class="pun"><span class="pun">()</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
        </span></span><span class="typ"><span class="typ">Assert</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">assertEquals</span></span><span class="pun"><span class="pun">(</span></span><span class="str"><span class="str">"Hello, Earthling!"</span></span><span class="pun"><span class="pun">,</span></span><span class="pln"><span class="pln">
            greeter</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">createGreeting</span></span><span class="pun"><span class="pun">(</span></span><span class="str"><span class="str">"Earthling"</span></span><span class="pun"><span class="pun">));</span></span><span class="pln"><span class="pln">
        greeter</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">greet</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">System</span></span><span class="pun"><span class="pun">.</span></span><span class="kwd"><span class="kwd">out</span></span><span class="pun"><span class="pun">,</span></span><span class="pln"><span class="pln"> </span></span><span class="str"><span class="str">"Earthling"</span></span><span class="pun"><span class="pun">);</span></span><span class="pln"><span class="pln">
    </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">
</span></span><span class="pun"><span class="pun">}</span></span></code></pre>
          <p>You’ve written your first Arquillian test!</p>
          <p>Ah, but you’re probably wondering how to run it ~:S If you’re thinking, “Just like a unit test”, then you’re correct! However, we first need to add a container adapter to the classpath.</p>
          <h3 id="add_a_container_adapter">Add a Container Adapter</h3>
          <p>We’ve been talking a lot about testing in a container, but so far we haven’t discussed which one we’ll be using. That’s because it’s a runtime decision.</p>
          <p>Arquillian selects the target container based on which container adapter is available on the test classpath. A <em>container adapter</em> controls and communicates with a container (e.g., Weld Embedded, JBoss AS, GlassFish, etc). That means we’ll need to add additional libraries to the project.</p>
          <p>An Arquillian test can be executed in any container that’s compatible with the programming model used in the test (as long as that container has an Arquillian adapter, of course). Our test is using the CDI programming model, so we need to use any container to supports CDI. We want fast turnaround during development, so we’ll start with the Weld EE embedded container (i.e., an embedded CDI runtime).</p>
          <p>Open the <code>pom.xml</code> file again and add the following group of dependencies directly below the other <code>&lt;dependency&gt;</code> elements:</p>
          <div class="filename">pom.xml</div>
          <pre class="prettify"><code class="prettify"><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.jboss.arquillian.container</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">arquillian-weld-ee-embedded-1.1</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">1.0.0.CR3</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">test</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.jboss.weld</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">weld-core</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">1.1.5.Final</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">test</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.slf4j</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">slf4j-simple</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">1.6.4</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">test</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span></code></pre>
          <p>To summarize, here are the three libraries you need to use Arquillian:</p>
          <ol>
          	<li>Arquillian JUnit integration (or TestNG integration)</li>
          	<li>Arquillian container adapter for the target container</li>
          	<li>Container runtime (for an embedded container) or container client (for a remote container)</li>
          </ol>
          <p>We’re using an embedded container in this example, so we need the container runtime, Weld.</p>
          <p>Now back to running the test.</p>
          <h3 id="run_the_arquillian_test">Run the Arquillian Test</h3>
          <p>Once you add all the necessary Arquillian libraries to the classpath, you can run an Arquillian test just like a unit test, whether you are running it from the IDE, the build script or any other test plugin. Let’s run the test in Eclipse.</p>
          <p>From the IDE window, right click on the GreeterTest.java file in the Package Explorer (or in the editor) and select Run As &gt; JUnit Test from the context menu.</p>
          <p><img src="./Getting Started · Arquillian Guides_files/arquillian_tutorial_run_junit_test.png" alt=""></p>
          <p>When you run the test, you should see the following lines printed to the console:</p>
          <pre class="output"><code class="output">21 [main] INFO org.jboss.weld.Version - WELD-000900 1.1.5 (Final)
Hello, Earthling!</code></pre>
          <p>You should then see the JUnit view appear, revealing a <strong class="greenbar">green bar</strong>!</p>
          <p><img src="./Getting Started · Arquillian Guides_files/arquillian_tutorial_junit_green_bar.png" alt=""></p>
          <p>You can also run the test on the commandline using Maven:</p>
          <pre class="command"><code class="command">$ mvn test</code></pre>
          <p>You should see the following lines printed to the console:</p>
          <pre class="output"><code class="output">-------------------------------------------------------
T E S T S
-------------------------------------------------------
Running org.arquillian.example.GreeterTest
19 [main] INFO org.jboss.weld.Version - WELD-000900 1.1.5 (Final)
Hello, Earthling!
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.907 sec</code></pre>
          <p><strong>Congratulations!</strong> You’ve earned your first <strong class="greenbar">green bar</strong> with Arquillian!</p>
          <h3 id="a_closer_look">A Closer Look</h3>
          <p>How do you know that CDI really worked? For all you know, Arquillian created a new instance of the <code>Greeter</code> class and injected it into the test without any involvement from CDI. Let’s prove it’s there.</p>
          <p>Create a new CDI bean named <code>PhraseBuilder</code> in the <code>org.arquillian.example</code> package that can create phrases from templates.</p>
          <div class="filename">src/main/java/org/arquillian/example/PhraseBuilder.java</div>
          <pre class="prettify"><code class="prettify"><span class="kwd"><span class="kwd">package</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">arquillian</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">example</span></span><span class="pun"><span class="pun">;</span></span></code><span class="pln">

</span><code class="prettify"><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> java</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">text</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">MessageFormat</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> java</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">util</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">HashMap</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> java</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">util</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">Map</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> javax</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">annotation</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">PostConstruct</span></span><span class="pun"><span class="pun">;</span></span></code><span class="pln">

</span><code class="prettify"><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">class</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">PhraseBuilder</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
    </span></span><span class="kwd"><span class="kwd">private</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">Map</span></span><span class="pun"><span class="pun">&lt;</span></span><span class="typ"><span class="typ">String</span></span><span class="pun"><span class="pun">,</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">String</span></span><span class="pun"><span class="pun">&gt;</span></span><span class="pln"><span class="pln"> templates</span></span><span class="pun"><span class="pun">;</span></span></code><span class="pln">

</span><code class="prettify"><span class="pln"><span class="pln">    </span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">String</span></span><span class="pln"><span class="pln"> buildPhrase</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">String</span></span><span class="pln"><span class="pln"> id</span></span><span class="pun"><span class="pun">,</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">Object</span></span><span class="pun"><span class="pun">...</span></span><span class="pln"><span class="pln"> args</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
        </span></span><span class="kwd"><span class="kwd">return</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">MessageFormat</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">format</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">templates</span></span><span class="pun"><span class="pun">.</span></span><span class="kwd"><span class="kwd">get</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">id</span></span><span class="pun"><span class="pun">),</span></span><span class="pln"><span class="pln"> args</span></span><span class="pun"><span class="pun">);</span></span><span class="pln"><span class="pln">
    </span></span><span class="pun"><span class="pun">}</span></span></code><span class="pln">

</span><code class="prettify"><span class="pln"><span class="pln">    </span></span><span class="ann"><span class="ann">@PostConstruct</span></span><span class="pln"><span class="pln">
    </span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">void</span></span><span class="pln"><span class="pln"> initialize</span></span><span class="pun"><span class="pun">()</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
        templates </span></span><span class="pun"><span class="pun">=</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">new</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">HashMap</span></span><span class="pun"><span class="pun">&lt;</span></span><span class="typ"><span class="typ">String</span></span><span class="pun"><span class="pun">,</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">String</span></span><span class="pun"><span class="pun">&gt;();</span></span><span class="pln"><span class="pln">
        templates</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">put</span></span><span class="pun"><span class="pun">(</span></span><span class="str"><span class="str">"hello"</span></span><span class="pun"><span class="pun">,</span></span><span class="pln"><span class="pln"> </span></span><span class="str"><span class="str">"Hello, {0}!"</span></span><span class="pun"><span class="pun">);</span></span><span class="pln"><span class="pln">
    </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">
</span></span><span class="pun"><span class="pun">}</span></span></code></pre>
          <p>Next, open up the <code>Greeter</code> class and create a new constructor that will inject <code>PhraseBuilder</code> using constructor injection. Then, delegate the task of creating the greeting to the injected bean.</p>
          <div class="filename">src/main/java/org/arquillian/example/Greeter.java</div>
          <pre class="prettify"><code class="prettify"><span class="kwd"><span class="kwd">package</span></span><span class="pln"><span class="pln"> org</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">arquillian</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">example</span></span><span class="pun"><span class="pun">;</span></span></code><span class="pln">

</span><code class="prettify"><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> java</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">io</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">PrintStream</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> javax</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">inject</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">Inject</span></span><span class="pun"><span class="pun">;</span></span></code><span class="pln">

</span><code class="prettify"><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">class</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">Greeter</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span></code><span class="pln">

</span><code class="prettify"><span class="pln"><span class="pln">    </span></span><span class="kwd"><span class="kwd">private</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">PhraseBuilder</span></span><span class="pln"><span class="pln"> phraseBuilder</span></span><span class="pun"><span class="pun">;</span></span></code><span class="pln">

</span><code class="prettify"><span class="pln"><span class="pln">    </span></span><span class="ann"><span class="ann">@Inject</span></span><span class="pln"><span class="pln">
    </span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">Greeter</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">PhraseBuilder</span></span><span class="pln"><span class="pln"> phraseBuilder</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
        </span></span><span class="kwd"><span class="kwd">this</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">phraseBuilder </span></span><span class="pun"><span class="pun">=</span></span><span class="pln"><span class="pln"> phraseBuilder</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
    </span></span><span class="pun"><span class="pun">}</span></span></code><span class="pln">

</span><code class="prettify"><span class="pln"><span class="pln">    </span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">void</span></span><span class="pln"><span class="pln"> greet</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">PrintStream</span></span><span class="pln"><span class="pln"> to</span></span><span class="pun"><span class="pun">,</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">String</span></span><span class="pln"><span class="pln"> name</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
        to</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">println</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">createGreeting</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">name</span></span><span class="pun"><span class="pun">));</span></span><span class="pln"><span class="pln">
    </span></span><span class="pun"><span class="pun">}</span></span></code><span class="pln">

</span><code class="prettify"><span class="pln"><span class="pln">    </span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">String</span></span><span class="pln"><span class="pln"> createGreeting</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">String</span></span><span class="pln"><span class="pln"> name</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
        </span></span><span class="kwd"><span class="kwd">return</span></span><span class="pln"><span class="pln"> phraseBuilder</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">buildPhrase</span></span><span class="pun"><span class="pun">(</span></span><span class="str"><span class="str">"hello"</span></span><span class="pun"><span class="pun">,</span></span><span class="pln"><span class="pln"> name</span></span><span class="pun"><span class="pun">);</span></span><span class="pln"><span class="pln">
    </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">
</span></span><span class="pun"><span class="pun">}</span></span></code></pre>
          <p>Now, in order for the test to work, an instance of <code>PhraseBuilder</code> must be created, its <code>@PostConstruct</code> method must be invoked and it must be injected into the constructor of <code>Greeter</code> when an instance of <code>Greeter</code> is created. We can be certain CDI is working if all that comes together.</p>
          <p>One last step. Because we created a new class, we must be sure that it gets included in the test archive that the <code>@Deployment</code> method returns. Simply change this line:</p>
          <pre class="prettify"><code class="prettify"><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">addClass</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">Greeter</span></span><span class="pun"><span class="pun">.</span></span><span class="kwd"><span class="kwd">class</span></span><span class="pun"><span class="pun">)</span></span></code></pre>
          <p>…to this one:</p>
          <pre class="prettify"><code class="prettify"><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">addClasses</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">Greeter</span></span><span class="pun"><span class="pun">.</span></span><span class="kwd"><span class="kwd">class</span></span><span class="pun"><span class="pun">,</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">PhraseBuilder</span></span><span class="pun"><span class="pun">.</span></span><span class="kwd"><span class="kwd">class</span></span><span class="pun"><span class="pun">)</span></span></code></pre>
          <p>Run the test again. You should get another <strong class="greenbar">green bar</strong>! Feels good, doesn’t it?</p>
          <h3 id="debug_the_test">Debug the Test</h3>
          <p>This is going to be a short chapter. Why? Because an Arquillian test is so straightforward that you debug it exactly how you debug a unit test. Just add a breakpoint anywhere—either in the test or in the application code. Then right click on the file and select Debug As &gt; JUnit Test. You’re now debugging in the container! Have fun poking around!</p>
          <p><img src="./Getting Started · Arquillian Guides_files/arquillian_tutorial_debugging_test.png" alt=""></p>
          <p class="warning"><span>If you’re using a remote container, Debug As does not cause breakpoints to be activated. Instead, you need to start the container in debug mode and attach the debugger. That’s because the test is run in a different JVM than the original test runner.</span></p>
          <p>As you’ve just witnessed, Arquillian is the ideal tool for testing CDI applications. It takes care of loading the CDI environment and injecting beans directly into the test. Best of all, when using an embedded CDI container, the test runs just as quickly as a unit test. If that’s all you need, then you can exit the tutorial now and start writing tests.</p>
          <p><strong>But wait!</strong> Is the embedded container telling the whole story? Will the component work if running inside a full container?</p>
          <p>One of the perks of Arquillian is that you can run the same test in different compatible containers, whether it’s another embedded container or a standalone container. If you intend to use a real container, read on.</p>
          <h3 id="add_more_containers">Add More Containers</h3>
          <p>As you learned earlier, Arquillian selects the container based on which container adapter is on the classpath. To switch to another container, you just change which container adapter is on the classpath before you run the test.</p>
          <p class="important"><span>You can only have one container adapter on the classpath at a time. Arquillian will abort execution of the test if it detects multiple adapters.</span></p>
          <p>One way to swap the libraries on the classpath is to manually edit the dependencies defined in <code>pom.xml</code>. But that’s just tedious. The recommended approach is to use Maven profiles.</p>
          <h4>Setting up Maven profiles</h4>
          <p>Maven profiles allow you to partition your dependencies into groups, one group for each container adapter and its related artifacts. When running the tests, you activate one of those groups, which in turn selects a target container. The profile is activated either using either a commandline flag (-P) or a preference in the IDE.</p>
          <p>Open up the <code>pom.xml</code> and create a new profile for Weld EE embedded by inserting the following XML directly under the <code>&lt;dependencies&gt;</code> element:</p>
          <div class="filename">pom.xml</div>
          <pre class="prettify"><code class="prettify"><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;profiles&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;profile&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;id&gt;</span></span><span class="pln"><span class="pln">arquillian-weld-ee-embedded</span></span><span class="tag"><span class="tag">&lt;/id&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;dependencies&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.jboss.spec</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">jboss-javaee-6.0</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">1.0.0.Final</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;type&gt;</span></span><span class="pln"><span class="pln">pom</span></span><span class="tag"><span class="tag">&lt;/type&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">provided</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.jboss.arquillian.container</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">arquillian-weld-ee-embedded-1.1</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">1.0.0.CR3</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">test</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.jboss.weld</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">weld-core</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">1.1.5.Final</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">test</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.slf4j</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">slf4j-simple</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">1.6.4</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">test</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;/dependencies&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;/profile&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;/profiles&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span></code></pre>
          <p>Next, <strong>remove</strong> the <code>jboss-javaee-6.0</code> dependency and the dependencies for the Weld EE embedded container adapter from the main <code>&lt;dependencies&gt;</code> section. Here’s how the <code>&lt;dependencies&gt;</code> and <code>&lt;profiles&gt;</code> sections should look when you’re done:</p>
          <div class="filename">pom.xml</div>
          <pre class="prettify"><code class="prettify"><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;dependencies&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">junit</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">junit</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">4.8.1</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">test</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.jboss.arquillian.junit</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">arquillian-junit-container</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">test</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;/dependencies&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;profiles&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;profile&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;id&gt;</span></span><span class="pln"><span class="pln">arquillian-weld-ee-embedded</span></span><span class="tag"><span class="tag">&lt;/id&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;dependencies&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.jboss.spec</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">jboss-javaee-6.0</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">1.0.0.Final</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;type&gt;</span></span><span class="pln"><span class="pln">pom</span></span><span class="tag"><span class="tag">&lt;/type&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">provided</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.jboss.arquillian.container</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">arquillian-weld-ee-embedded-1.1</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">1.0.0.CR3</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">test</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.jboss.weld</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">weld-core</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">1.1.5.Final</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">test</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.slf4j</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">slf4j-simple</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">1.6.4</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">test</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;/dependencies&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;/profile&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;/profiles&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span></code></pre>
          <p class="info"><span>The Java EE API dependency has been moved to the profile since some containers, like Embedded GlassFish, already provide these libraries. Having both on the classpath at the same time results in conflicts. Therefore, we have to play this classpath dance.</span></p>
          <p>We’ll now include two additional profiles in the <code>pom.xml</code> inside the <code>&lt;profiles&gt;</code> element, the first for <a href="http://embedded-glassfish.java.net/">Embedded GlassFish</a>:</p>
          <div class="filename">pom.xml</div>
          <pre class="prettify"><code class="prettify"><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;profile&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;id&gt;</span></span><span class="pln"><span class="pln">arquillian-glassfish-embedded</span></span><span class="tag"><span class="tag">&lt;/id&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;dependencies&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.jboss.arquillian.container</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">arquillian-glassfish-embedded-3.1</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">1.0.0.CR3</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">test</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.glassfish.main.extras</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">glassfish-embedded-all</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">3.1.2</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">provided</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;/dependencies&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;/profile&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span></code></pre>
          <p>and the other for JBoss AS managed:</p>
          <div class="filename">pom.xml</div>
          <pre class="prettify"><code class="prettify"><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;profile&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;id&gt;</span></span><span class="pln"><span class="pln">arquillian-jbossas-managed</span></span><span class="tag"><span class="tag">&lt;/id&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;dependencies&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.jboss.spec</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">jboss-javaee-6.0</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">1.0.0.Final</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;type&gt;</span></span><span class="pln"><span class="pln">pom</span></span><span class="tag"><span class="tag">&lt;/type&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">provided</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.jboss.as</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">jboss-as-arquillian-container-managed</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">7.1.1.Final</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">test</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;dependency&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.jboss.arquillian.protocol</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">arquillian-protocol-servlet</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;scope&gt;</span></span><span class="pln"><span class="pln">test</span></span><span class="tag"><span class="tag">&lt;/scope&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;/dependency&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;/dependencies&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;/profile&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span></code></pre>
          <p class="info"><span>By default, JBoss AS 7 deploys test archives to the server using the JMX protocol. We’ve gone ahead and added the dependency for the Servlet protocol in the <code>arquillian-jbossas-managed</code> profile just so it’s there if you need to use it in the future. See <a href="https://community.jboss.org/wiki/WhyDoIGetNoActiveContextsForScopeTypeWhenTestingOnJBossAS7">this FAQ</a> for instructions on how to switch to it.</span></p>
          <p>You now have the choice of running the tests in one of three containers.</p>
          <p>If you’re having trouble with the pom.xml up to this point, you can download the file <a href="https://raw.github.com/arquillian/arquillian-examples/master/arquillian-tutorial/pom.xml">pom.xml</a> from the <a href="https://github.com/arquillian/arquillian-examples/tree/master/arquillian-tutorial">example project</a>.</p>
          <h3 id="test_across_containers">Test Across Containers</h3>
          <p>When you refresh the project in Eclipse, you’ll notice that it no longer builds. That’s because you need to activate one of the container profiles. Let’s activate the Weld EE embedded profile to restore the previous state.</p>
          <p>There are two ways to activate a Maven profile in Eclipse (assuming you are using the <a href="http://www.eclipse.org/m2e">Maven Integration for Eclipse</a>):</p>
          <ol>
          	<li>Manual configuration (standard approach)</li>
          	<li>Maven profile selector (JBoss Tools)</li>
          </ol>
          <h4>Set active Maven profile: Manual configuration</h4>
          <p>To set the active profile manually, follow these steps:</p>
          <ol>
          	<li>Right click on the project and select Properties</li>
          	<li>Select the Maven properties tab</li>
          	<li>Enter the profile id in the Active Maven Profiles field (e.g., <code>arquillian-weld-ee-embedded</code>)</li>
          	<li>Click the OK button and accept the project changes</li>
          </ol>
          <p>Here’s the Maven properties screen showing the profile we’ve activated:</p>
          <p><img src="./Getting Started · Arquillian Guides_files/arquillian_tutorial_maven_properties.png" alt=""></p>
          <h4>Set active Maven profile: Maven profile selector</h4>
          <p>If you have JBoss Tools installed, selecting the active profile becomes much easier:</p>
          <ol>
          	<li>Right click on the project and select Maven &gt; Select Active Profiles…<br>
          (alternatively, you can use the keybinding Ctrl+Shift+P or the button in the toolbar)</li>
          	<li>Check the box next to the profile you want to activate (e.g., <code>arquillian-weld-ee-embedded</code>)</li>
          	<li>Click the OK button</li>
          </ol>
          <p>Here’s the Maven profile selector dialog showing the profile we’ve activated:</p>
          <p><img src="./Getting Started · Arquillian Guides_files/arquillian_tutorial_maven_profile_selector.png" alt=""></p>
          <p>Once you’ve activate the profile, the compile errors will disappear and you’ll be able to run the test again successfully.</p>
          <p>Another option to active a profile is to set one of the profiles to be active by default. Let’s make the Weld EE Embedded profile the default by adding an <code>&lt;activation&gt;</code> element to the profile definition:</p>
          <div class="filename">pom.xml</div>
          <pre class="prettify"><code class="prettify"><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;profile&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;id&gt;</span></span><span class="pln"><span class="pln">arquillian-weld-ee-embedded</span></span><span class="tag"><span class="tag">&lt;/id&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;activation&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;activeByDefault&gt;</span></span><span class="pln"><span class="pln">true</span></span><span class="tag"><span class="tag">&lt;/activeByDefault&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;/activation&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;dependencies&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="com"><span class="com">&lt;!-- hidden --&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;/dependencies&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;/profile&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span></code></pre>
          <p>Now you no longer have to select a profile in the IDE since this one will be automatically selected. However, to use a different profile (exclusively), you have to first explicitly deactivate this profile.</p>
          <h4>Switching between containers</h4>
          <p>You already know the test works in Weld EE Embedded. Let’s switch to GlassFish embedded by repeating the steps above, this time activating only the <code>arquillian-glassfish-embedded</code> profile.</p>
          <p class="info"><span>If you set the Weld EE Embedded profile to be active by default, you have to explicitly disable it to use another profile. You can disable a profile in the Maven Profile selector by right clicking on the entry and selecting Deactivate from the context menu. You’ll see this prefixes the profile name with an exclamation mark (e.g., <code>!arquillian-weld-ee-embedded</code>). Multiple profile selections (or deactivations) are separated by commas.</span></p>
          <p>Run the test again. You should see GlassFish start in the console…and another <strong class="greenbar">green bar</strong>!</p>
          <p>You’ve now run the same test on two different embedded containers, a CDI container (Weld) and a Java EE container (GlassFish). Both of these executions are in process. To really be sure the component works in a pure environment, we need to use a standalone container. Let’s switch to using JBoss AS.</p>
          <p>To run the test on a standalone instance of JBoss AS, you first need to set it up. You can either:</p>
          <ol>
          	<li>Download and unpack it in a location outside the project</li>
          	<li>Use Maven to download and unpack it during a build</li>
          </ol>
          <p>Follow these steps to setup JBoss AS 7 outside the project:</p>
          <ol>
          	<li><a href="http://jboss.org/jbossas/downloads">Download JBoss AS 7</a> (make sure the version you download matches the version of the <code>jboss-as-arquillian-container-managed</code> dependency in your <code>pom.xml</code>)</li>
          	<li>Extract the archive</li>
          	<li>(optional) Set the <code>JBOSS_HOME</code> environment variable to the path of the extracted directory</li>
          </ol>
          <p>If you have JBoss AS installed (i.e., extracted) and your <code>JBOSS_HOME</code> environment variable set to that location, you can activate the <code>arquillian-jbossas-managed</code> profile and run the test. You should see JBoss AS start in the console…and another <strong class="greenbar">green bar</strong>!</p>
          <p class="info"><span>The message printed to System.out gets written to the server log instead of the console, so look over there.</span></p>
          <p>If you want Maven to handle this task for you instead (optional), add the following XML fragment under the <code>&lt;id&gt;</code> element of the <code>arquillian-jbossas-managed</code> profile:</p>
          <div class="filename">pom.xml</div>
          <pre class="prettify"><code class="prettify"><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;build&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;plugins&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;plugin&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">maven-dependency-plugin</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;executions&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;execution&gt;</span></span><span class="pln"><span class="pln">
                    </span></span><span class="tag"><span class="tag">&lt;id&gt;</span></span><span class="pln"><span class="pln">unpack</span></span><span class="tag"><span class="tag">&lt;/id&gt;</span></span><span class="pln"><span class="pln">
                    </span></span><span class="tag"><span class="tag">&lt;phase&gt;</span></span><span class="pln"><span class="pln">process-test-classes</span></span><span class="tag"><span class="tag">&lt;/phase&gt;</span></span><span class="pln"><span class="pln">
                    </span></span><span class="tag"><span class="tag">&lt;goals&gt;</span></span><span class="pln"><span class="pln">
                        </span></span><span class="tag"><span class="tag">&lt;goal&gt;</span></span><span class="pln"><span class="pln">unpack</span></span><span class="tag"><span class="tag">&lt;/goal&gt;</span></span><span class="pln"><span class="pln">
                    </span></span><span class="tag"><span class="tag">&lt;/goals&gt;</span></span><span class="pln"><span class="pln">
                    </span></span><span class="tag"><span class="tag">&lt;configuration&gt;</span></span><span class="pln"><span class="pln">
                        </span></span><span class="tag"><span class="tag">&lt;artifactItems&gt;</span></span><span class="pln"><span class="pln">
                            </span></span><span class="tag"><span class="tag">&lt;artifactItem&gt;</span></span><span class="pln"><span class="pln">
                                </span></span><span class="tag"><span class="tag">&lt;groupId&gt;</span></span><span class="pln"><span class="pln">org.jboss.as</span></span><span class="tag"><span class="tag">&lt;/groupId&gt;</span></span><span class="pln"><span class="pln">
                                </span></span><span class="tag"><span class="tag">&lt;artifactId&gt;</span></span><span class="pln"><span class="pln">jboss-as-dist</span></span><span class="tag"><span class="tag">&lt;/artifactId&gt;</span></span><span class="pln"><span class="pln">
                                </span></span><span class="tag"><span class="tag">&lt;version&gt;</span></span><span class="pln"><span class="pln">7.1.1.Final</span></span><span class="tag"><span class="tag">&lt;/version&gt;</span></span><span class="pln"><span class="pln">
                                </span></span><span class="tag"><span class="tag">&lt;type&gt;</span></span><span class="pln"><span class="pln">zip</span></span><span class="tag"><span class="tag">&lt;/type&gt;</span></span><span class="pln"><span class="pln">
                                </span></span><span class="tag"><span class="tag">&lt;overWrite&gt;</span></span><span class="pln"><span class="pln">false</span></span><span class="tag"><span class="tag">&lt;/overWrite&gt;</span></span><span class="pln"><span class="pln">
                                </span></span><span class="tag"><span class="tag">&lt;outputDirectory&gt;</span></span><span class="pln"><span class="pln">target</span></span><span class="tag"><span class="tag">&lt;/outputDirectory&gt;</span></span><span class="pln"><span class="pln">
                            </span></span><span class="tag"><span class="tag">&lt;/artifactItem&gt;</span></span><span class="pln"><span class="pln">
                        </span></span><span class="tag"><span class="tag">&lt;/artifactItems&gt;</span></span><span class="pln"><span class="pln">
                    </span></span><span class="tag"><span class="tag">&lt;/configuration&gt;</span></span><span class="pln"><span class="pln">
                </span></span><span class="tag"><span class="tag">&lt;/execution&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;/executions&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;/plugin&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;/plugins&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;/build&gt;</span></span><span class="pln"><span class="pln"> 
</span></span><span class="com"><span class="com">&lt;!-- clip --&gt;</span></span></code></pre>
          <p>To target a managed JBoss AS 7 instance downloaded by Maven, you also need a small bit of Arquillian configuration. Create the following configuration file and assign the value of the <code>jbossHome</code> property to the location where JBoss AS 7 is installed. If you’re using the Maven dependency plugin, the location is <code>target/jboss-as-7.1.1.Final</code>.</p>
          <div class="filename">src/test/resources/arquillian.xml</div>
          <pre class="prettify"><code class="prettify"><span class="tag"><span class="tag">&lt;arquillian</span></span><span class="pln"><span class="pln"> </span></span><span class="atn"><span class="atn">xmlns</span></span><span class="pun"><span class="pun">=</span></span><span class="atv"><span class="atv">"http://jboss.org/schema/arquillian"</span></span><span class="pln"><span class="pln">
    </span></span><span class="atn"><span class="atn">xmlns:xsi</span></span><span class="pun"><span class="pun">=</span></span><span class="atv"><span class="atv">"http://www.w3.org/2001/XMLSchema-instance"</span></span><span class="pln"><span class="pln">
    </span></span><span class="atn"><span class="atn">xsi:schemaLocation</span></span><span class="pun"><span class="pun">=</span></span><span class="atv"><span class="atv">"
        http://jboss.org/schema/arquillian
        http://jboss.org/schema/arquillian/arquillian_1_0.xsd"</span></span><span class="tag"><span class="tag">&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;container</span></span><span class="pln"><span class="pln"> </span></span><span class="atn"><span class="atn">qualifier</span></span><span class="pun"><span class="pun">=</span></span><span class="atv"><span class="atv">"jbossas-managed"</span></span><span class="pln"><span class="pln"> </span></span><span class="atn"><span class="atn">default</span></span><span class="pun"><span class="pun">=</span></span><span class="atv"><span class="atv">"true"</span></span><span class="tag"><span class="tag">&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;configuration&gt;</span></span><span class="pln"><span class="pln">
            </span></span><span class="tag"><span class="tag">&lt;property</span></span><span class="pln"><span class="pln"> </span></span><span class="atn"><span class="atn">name</span></span><span class="pun"><span class="pun">=</span></span><span class="atv"><span class="atv">"jbossHome"</span></span><span class="tag"><span class="tag">&gt;</span></span><span class="pln"><span class="pln">target/jboss-as-7.1.1.Final</span></span><span class="tag"><span class="tag">&lt;/property&gt;</span></span><span class="pln"><span class="pln">
        </span></span><span class="tag"><span class="tag">&lt;/configuration&gt;</span></span><span class="pln"><span class="pln">
    </span></span><span class="tag"><span class="tag">&lt;/container&gt;</span></span><span class="pln"><span class="pln">
</span></span><span class="tag"><span class="tag">&lt;/arquillian&gt;</span></span></code></pre>
          <p>Now change the active Maven profile to <code>arquillian-jbossas-managed</code>, then run the test again. You should see JBoss AS starting in the console…and yet another <strong class="greenbar">green bar</strong>!</p>
          <p>That’s the <em>same</em> test, this time running in a full Java EE container. Arquillian packages the test, deploys to the container as a Java EE archive, executes the tests remotely, captures the results and feeds them back to the Eclipse JUnit result view (or in the Maven surefire results).</p>
          <p>If you want to dive deeper into Arquillian, move on to <a href="http://arquillian.org/guides/getting_started_rinse_and_repeat">Getting Started: Rinse and Repeat</a> guide. To learn how to use Forge to automate Arquillian setup and test generation, read through <a href="http://arquillian.org/guides/get_started_faster_with_forge">Get Started Faster with Forge</a>.</p>
          <h3 id="share">Share the Knowledge</h3>
          <p>Find this guide useful?</p>
          <p class="post_to_twitter"><a href="http://twitter.com/home/?status=Just%20read%20the%20%23Arquillian%20Getting%20Started%20guide%20and%20got%20a%20%23greenbar!%20Get%20yours.%20http://arquillian.org/guides/getting_started/"><img src="./Getting Started · Arquillian Guides_files/post_to_twitter.png" alt=""></a></p>
          <div id="___plusone_1" style="text-indent: 0px; margin: 0px; padding: 0px; background-color: transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 50px; height: 60px; background-position: initial initial; background-repeat: initial initial;"><iframe frameborder="0" hspace="0" marginheight="0" marginwidth="0" scrolling="no" style="position: static; top: 0px; width: 50px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 60px;" tabindex="0" vspace="0" width="100%" id="I1_1380834704801" name="I1_1380834704801" src="./Getting Started · Arquillian Guides_files/fastbutton(1).htm" data-gapiattached="true" title="+1"></iframe></div>
          <p>There’s a lot more about Arquillian to cover. If you’re ready to learn more, check out the <a href="http://arquillian.org/guides">other available guides</a>.</p>
          <h4>Feedback</h4>
          <p>Find a bug in the guide? Something missing? You can fix it by <a href="http://github.com/arquillian/arquillian.github.com">forking this website</a>, making the correction and <a href="http://help.github.com/send-pull-requests">sending a pull request</a>. If you’re just plain stuck, feel free to ask a question in the <a href="http://community.jboss.org/en/arquillian?view=discussions">user discussion forum</a>.</p>
          <h4>Recent Changelog</h4>
          <ul>
            <li>
              Dec 01, 2012:
              Fix typos: let's -&gt; lets
              <em>by chocolateboy</em>
            </li>
            <li>
              Oct 20, 2012:
              Specify when @deployment method is mandatory; grammar fixes
              <em>by Dan Allen</em>
            </li>
            <li>
              Jul 12, 2012:
              Clarifications
              <em>by Dan Allen</em>
            </li>
            <li>
              Jul 12, 2012:
              Fix grammar error
              <em>by Dan Allen</em>
            </li>
            <li>
              May 08, 2012:
              Update url of example pom.xml files, minor pom.xml updates, mention that test still works on embedded glassfish
              <em>by Dan Allen</em>
            </li>
            <li>
              May 02, 2012:
              Rewording and paragraph reordering
              <em>by Dan Allen</em>
            </li>
            <li>
              Apr 30, 2012:
              Recommend jdk 1.6 over jdk 1.5
              <em>by Dan Allen</em>
            </li>
            <li>
              Apr 30, 2012:
              Proactively add the servlet protocol to the jboss as 7 profile
              <em>by Dan Allen</em>
            </li>
            <li>
              Apr 30, 2012:
              Emphasis on container adapter
              <em>by Dan Allen</em>
            </li>
            <li>
              Apr 30, 2012:
              Add clarification about the container adapter
              <em>by Dan Allen</em>
            </li>
            <li>
              Apr 30, 2012:
              Add note about shrinkwrap archives, clarify some text
              <em>by Dan Allen</em>
            </li>
            <li>
              Apr 30, 2012:
              Add optional recommendation to upgrade maven-surefire-plugin version
              <em>by Dan Allen</em>
            </li>
            <li>
              Apr 30, 2012:
              Fixed the add-dependency forge command for the jboss-javaee-6.0 artifact
              <em>by Mylène Reiners</em>
            </li>
            <li>
              Apr 30, 2012:
              Rewording
              <em>by Dan Allen</em>
            </li>
            <li>
              Apr 30, 2012:
              Add hint for how to print the contents of the shrinkwrap archive
              <em>by Dan Allen</em>
            </li>
          </ul>
          <p>
            <a href="https://github.com/arquillian/arquillian.github.com/commits/develop/guides/getting_started.textile">See full history »</a>
          </p>
        </div>
        <div id="sidebar">
          <div id="toc">
            <h3 class="chapter_header">Chapters</h3>
            <ol class="chapters">
              <li>
                <a href="http://arquillian.org/guides/getting_started/#assumptions" id="assumptions_link">Assumptions</a>
              </li>
              <li>
                <a href="http://arquillian.org/guides/getting_started/#create_a_new_project" id="create_a_new_project_link">Create a New Project</a>
              </li>
              <li>
                <a href="http://arquillian.org/guides/getting_started/#open_the_project_in_eclipse" id="open_the_project_in_eclipse_link">Open the Project in Eclipse</a>
              </li>
              <li>
                <a href="http://arquillian.org/guides/getting_started/#create_a_component" id="create_a_component_link">Create a Component</a>
              </li>
              <li>
                <a href="http://arquillian.org/guides/getting_started/#add_the_arquillian_apis" id="add_the_arquillian_apis_link">Add the Arquillian APIs</a>
              </li>
              <li>
                <a href="http://arquillian.org/guides/getting_started/#write_an_arquillian_test" id="write_an_arquillian_test_link">Write an Arquillian Test</a>
              </li>
              <li>
                <a href="http://arquillian.org/guides/getting_started/#add_a_container_adapter" id="add_a_container_adapter_link">Add a Container Adapter</a>
              </li>
              <li>
                <a href="http://arquillian.org/guides/getting_started/#run_the_arquillian_test" id="run_the_arquillian_test_link">Run the Arquillian Test</a>
              </li>
              <li>
                <a href="http://arquillian.org/guides/getting_started/#a_closer_look" id="a_closer_look_link">A Closer Look</a>
              </li>
              <li>
                <a href="http://arquillian.org/guides/getting_started/#debug_the_test" id="debug_the_test_link">Debug the Test</a>
              </li>
              <li>
                <a href="http://arquillian.org/guides/getting_started/#add_more_containers" id="add_more_containers_link">Add More Containers</a>
              </li>
              <li>
                <a href="http://arquillian.org/guides/getting_started/#test_across_containers" id="test_across_containers_link">Test Across Containers</a>
              </li>
              <li>
                <a href="http://arquillian.org/guides/getting_started/#share" id="share_link">Share the Knowledge</a>
              </li>
            </ol>
          </div>
        </div>
        <script>
          $(window).load(function() { activateScrollingToc(['assumptions', 'create_a_new_project', 'open_the_project_in_eclipse', 'create_a_component', 'add_the_arquillian_apis', 'write_an_arquillian_test', 'add_a_container_adapter', 'run_the_arquillian_test', 'a_closer_look', 'debug_the_test', 'add_more_containers', 'test_across_containers', 'share']) })
        </script>
      </div>
    </div>
    <footer>
      <div class="container">
        <div class="project">
          <img src="./Getting Started · Arquillian Guides_files/arquillian_logo_200px.png">
          <p class="bottom">
            ©
            Copyright 2009-2013 Red Hat, Inc.
            <br>
            <i class="icon-fire"></i>
            Mixed with <a href="http://twitter.github.com/bootstrap">Bootstrap</a>. Baked by <a href="http://awestruct.org/">Awestruct</a>.
            <br>
            <i class="icon-share-alt"></i>
            Website and docs licensed under <a href="http://creativecommons.org/licenses/by/3.0/">CC BY 3.0</a>.
            <br>
            Code released under <a href="http://www.apache.org/licenses/LICENSE-2.0.html">Apache License, v2.0</a>.
          </p>
        </div>
        <div class="footer-nav">
          <h4>Learn</h4>
          <ul>
            <li>
              <a href="http://arquillian.org/invasion">Mission</a>
            </li>
            <li>
              <a href="http://arquillian.org/features">Features</a>
            </li>
            <li>
              <a href="http://arquillian.org/guides">Guides</a>
            </li>
            <li>
              <a href="https://docs.jboss.org/author/display/ARQ/Reference+Guide">Manual</a>
            </li>
            <li>
              <a href="http://community.jboss.org/en/arquillian/faq">FAQs</a>
            </li>
          </ul>
        </div>
        <div class="footer-nav">
          <h4>Get Involved</h4>
          <ul>
            <li>
              <a href="http://community.jboss.org/en/arquillian?view=discussions">Forums</a>
            </li>
            <li>
              <a href="https://issues.jboss.org/browse/ARQ">Issue Tracker</a>
            </li>
            <li>
              <a href="https://github.com/arquillian">Source Code</a>
            </li>
            <li>
              <a href="http://arquillian.org/community/contributors">Contributors</a>
            </li>
            <li>
              <a href="https://community.jboss.org/groups/testing">Testing SIG</a>
            </li>
          </ul>
        </div>
        <div class="sponser">
          <div class="follow-us">
            <h4>Stay Informed</h4>
            <ul>
              <li>
                <a href="https://plus.google.com/100660127586085393031?rel=author"><img alt="Google+" src="./Getting Started · Arquillian Guides_files/googleplus-16.png" title="Follow Arquillian on Google+"></a>
              </li>
              <li>
                <a href="https://twitter.com/#!/search/%23arquillian"><img alt="Twitter" src="./Getting Started · Arquillian Guides_files/twitter-16.png" title="Browse the #arquillian hashtag on Twitter"></a>
              </li>
              <li>
                <a href="http://www.linkedin.com/groups?gid=3120340"><img alt="LinkedIn" src="./Getting Started · Arquillian Guides_files/linkedin-16.png" title="Join the Arquillian group on LinkedIn"></a>
              </li>
              <li>
                <a href="http://vimeo.com/channels/arquillian"><img alt="Vimeo" src="./Getting Started · Arquillian Guides_files/vimeo-16.png" title="Follow the Arquillian channel on Vimeo"></a>
              </li>
            </ul>
          </div>
          <p>This website is open source! If you want to improve it, <a href="http://github.com/arquillian/arquillian.github.com">fork the project</a>, hack on it, then send a pull request. You can also view the <a href="http://www.seethestats.com/site/arquillian.org">visitor stats</a>.</p>
          <p class="image"><a href="http://jboss.org/"><img src="./Getting Started · Arquillian Guides_files/jboss_redhat_branding.png" class="branding" title="Red Hat, Inc." alt="Red Hat, Inc."></a></p>
          <p>Arquillian is a <a href="http://jboss.org/">JBoss Community</a> project and development is sponsored by Red Hat, Inc.</p>
          <p class="bottom"><a href="http://www.redhat.com/legal/legal_statement.html">Terms of Use</a> | <a href="http://www.redhat.com/legal/privacy_statement.html">Privacy Policy</a></p>
        </div>
        <a class="visible-desktop" href="http://arquillian.org/guides/getting_started/#" id="toTop">Top</a>
      </div>
    </footer>
    <script>
      $(function() {
        $('html').addClass('ready');
        prettify();
        activateFooterGravity();
        activateTooltips();
        activateToTopControl();
      });
    </script>
    <script src="./Getting Started · Arquillian Guides_files/bootstrap.min.js"></script>
    <script src="./Getting Started · Arquillian Guides_files/prettify.js"></script>
    <script src="./Getting Started · Arquillian Guides_files/site.js"></script>
    <script src="./Getting Started · Arquillian Guides_files/jquery-scroll.js"></script>
    <script src="./Getting Started · Arquillian Guides_files/plusone(1).js" gapi_processed="true"></script>
    <script>
      (function() {
        var po = document.createElement('script'); po.async = true; po.src = 'https://apis.google.com/js/plusone.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
      })();
    </script>
    <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount','UA-18727998-3']);
    _gaq.push(['_trackPageview']);
    (function() {
     var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
     ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
     var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
    </script>
  

<iframe name="oauth2relay403680084" id="oauth2relay403680084" src="./Getting Started · Arquillian Guides_files/postmessageRelay.htm" style="width: 1px; height: 1px; position: absolute; top: -100px;"></iframe></body></html>